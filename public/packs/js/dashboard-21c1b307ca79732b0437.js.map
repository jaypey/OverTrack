{"version":3,"file":"js/dashboard-21c1b307ca79732b0437.js","sources":["webpack://ontrack/./app/javascript/components/dashboard/CategoriesList.jsx","webpack://ontrack/./app/javascript/components/dashboard/CategoryTile.jsx","webpack://ontrack/./app/javascript/components/dashboard/Chart.jsx","webpack://ontrack/./app/javascript/components/dashboard/Main.jsx","webpack://ontrack/./app/javascript/components/dashboard/Overview.jsx","webpack://ontrack/./app/javascript/packs/dashboard.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Arr } from '../../helpers/main';\r\nimport CategoryTile from './CategoryTile';\r\nimport CategoryFormModal from '../categories/FormModal';\r\n\r\nclass CategoriesList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { showCategoryCreateModal: false };\r\n  }\r\n\r\n  openCategoryCreate = () => { this.setState({ showCategoryCreateModal: true }); }\r\n  closeCategoryCreate = () => { this.setState({ showCategoryCreateModal: false }); }\r\n  onCategorySave = () => {\r\n    this.closeCategoryCreate();\r\n    this.props.onChange();\r\n  }\r\n\r\n  colorsToSkip() {\r\n    return this.props.categoriesWithExpensesAndSpend.map((cat) => cat.color);\r\n  }\r\n\r\n  chunkedCategories() {\r\n    const categoriesAndAddButton = this.props.categoriesWithExpensesAndSpend.concat('addButton');\r\n    return Arr.chunk(categoriesAndAddButton, 2);\r\n  }\r\n\r\n  renderCategoryCreateModal() {\r\n    if (!this.state.showCategoryCreateModal) { return ''; }\r\n    return <CategoryFormModal colorsToSkip={this.colorsToSkip()} onClose={this.closeCategoryCreate} onSave={this.onCategorySave} />;\r\n  }\r\n\r\n  renderCategory(category, idx) {\r\n    let markup = '';\r\n    if (category == 'addButton') {\r\n      markup = (\r\n        <div className=\"category-tile dim-til-hover hover-pointer no-border\" onClick={this.openCategoryCreate}>\r\n          <div className=\"new\">+ Add a category</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      markup = (\r\n        <CategoryTile\r\n          categoryWithExpensesAndSpend={category}\r\n          colorsToSkip={this.colorsToSkip()}\r\n          onChange={this.props.onChange}\r\n        />\r\n      );\r\n    }\r\n\r\n    return <div className=\"six columns\" key={idx}>{markup}</div>;\r\n  }\r\n\r\n  renderRow(listChunk, idx) {\r\n    return (\r\n      <div className=\"row\" key={idx}>\r\n        {listChunk.map((category, i) => this.renderCategory(category, i))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderCategoryCreateModal()}\r\n        {this.chunkedCategories().map((listChunk, idx) => this.renderRow(listChunk, idx))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCategoriesList.defaultProps = {\r\n  categoriesWithExpensesAndSpend: [],\r\n};\r\n\r\nCategoriesList.propTypes = {\r\n  categoriesWithExpensesAndSpend: PropTypes.array,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CategoriesList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Numerics } from '../../helpers/main';\r\nimport CategoryFormModal from '../categories/FormModal';\r\n\r\nclass CategoryTile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { showCategoryEditModal: false };\r\n  }\r\n\r\n  openCategoryEdit = () => { this.setState({ showCategoryEditModal: true }); }\r\n  closeCategoryEdit = () => { this.setState({ showCategoryEditModal: false }); }\r\n  onCategorySave = () => {\r\n    this.closeCategoryEdit();\r\n    this.props.onChange();\r\n  }\r\n  onExpenseSave = () => {\r\n    this.closeExpenseCreate();\r\n    this.props.onChange();\r\n  }\r\n\r\n  goalDiff() {\r\n    if (!this.props.categoryWithExpensesAndSpend.monthly_goal) { return 0; }\r\n    return this.props.categoryWithExpensesAndSpend.monthly_goal - this.props.categoryWithExpensesAndSpend.spend;\r\n  }\r\n\r\n  goalComparisonDisplay() {\r\n    if (!this.props.categoryWithExpensesAndSpend.monthly_goal) { return 'No goal set'; }\r\n\r\n    const diff = this.goalDiff();\r\n    return (diff >= 0) ? `${Numerics.centsToDollars(diff)} remaining` : `${Numerics.centsToDollars(Math.abs(diff))} over`;\r\n  }\r\n\r\n  normalizedPercentage() {\r\n    if (!this.props.categoryWithExpensesAndSpend.monthly_goal) { return 0; }\r\n    return Math.min(100, this.props.categoryWithExpensesAndSpend.spend / this.props.categoryWithExpensesAndSpend.monthly_goal * 100);\r\n  }\r\n\r\n  renderCategoryEditModal() {\r\n    if (!this.state.showCategoryEditModal) { return ''; }\r\n    return (\r\n      <CategoryFormModal\r\n        onClose={this.closeCategoryEdit}\r\n        onSave={this.onCategorySave}\r\n        category={this.props.categoryWithExpensesAndSpend}\r\n        colorsToSkip={this.props.colorsToSkip}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const category = this.props.categoryWithExpensesAndSpend;\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"category-tile flex flex-space-between tint-on-hover hover-pointer\"\r\n          style={{ borderColor: category.color }}\r\n          onClick={this.openCategoryEdit}\r\n        >\r\n          <h3>{category.name}</h3>\r\n\r\n          <div className=\"text-right\">\r\n            <h2 className={category.spend > 0 ? '' : 'text-muted'}>{Numerics.centsToDollars(category.spend)}</h2>\r\n            <div className={this.goalDiff() < 0 ? 'text-warning' : 'text-muted'}>\r\n              {this.goalDiff() < 0 && (\r\n                <i className=\"fas fa-exclamation-circle mr-4\" />\r\n              )}\r\n              {this.goalComparisonDisplay()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.renderCategoryEditModal()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nCategoryTile.defaultProps = {\r\n  categoryWithExpensesAndSpend: {},\r\n  colorsToSkip: [],\r\n};\r\n\r\nCategoryTile.propTypes = {\r\n  categoryWithExpensesAndSpend: PropTypes.object,\r\n  colorsToSkip: PropTypes.array,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CategoryTile;\r\n","import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport BarChart from '../shared/BarChart';\r\nimport { Reports } from '../../api/main';\r\nimport { Alerts } from '../../helpers/main';\r\n\r\nconst Chart = ({ month }) => {\r\n  const [chartdata, setChartdata] = useState({ data: [], labels: [] });\r\n\r\n  useEffect(() => {\r\n    Reports.month({ month }).then(\r\n      (resp) => {\r\n        const labels = resp.category_totals.map((r) => r.category);\r\n        const datasets = [\r\n          { label: 'Spend', backgroundColor: '#8295e0', data: [] },\r\n          {\r\n            label: `Average (${moment(resp.category_averages_for_year.start_date).format('M/D')} - ${moment(resp.category_averages_for_year.end_date).format('M/D')})`,\r\n            backgroundColor: '#deeefe',\r\n            data: [],\r\n          },\r\n          { label: 'Goal', backgroundColor: '#d8a384', data: [] },\r\n        ];\r\n        resp.category_totals.forEach((r) => {\r\n          datasets[0].data.push(r.spend / 100);\r\n          const avg = resp.category_averages_for_year.averages.find(a => a.category === r.category)?.amount || 0;\r\n          datasets[1].data.push(avg / 100);\r\n          datasets[2].data.push(r.monthly_goal / 100);\r\n        });\r\n\r\n        setChartdata({ data: datasets, labels });\r\n      },\r\n      () => { Alerts.genericError(); },\r\n    );\r\n  }, [month]);\r\n\r\n  return (\r\n    <div className=\"chart-container-short\">\r\n      <BarChart data={chartdata.data} labels={chartdata.labels} hideLegend />\r\n    </div>\r\n  );\r\n};\r\n\r\nChart.propTypes = {\r\n  month: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport Overview from './Overview';\r\nimport CategoriesList from './CategoriesList';\r\nimport ExpenseFormModal from '../expenses/FormModal';\r\nimport Chart from './Chart';\r\nimport { Categories, Expenses, Goals } from '../../api/main';\r\nimport { Alerts } from '../../helpers/main';\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: [],\r\n      expenses: [],\r\n      loaded: false,\r\n      monthlyGoal: 0,\r\n      showExpenseCreateModal: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  openExpenseCreate = () => { this.setState({ showExpenseCreateModal: true }); }\r\n  closeExpenseCreate = () => { this.setState({ showExpenseCreateModal: false }); }\r\n  onExpenseSave = () => {\r\n    this.closeExpenseCreate();\r\n    this.loadData();\r\n  }\r\n\r\n  loadData = () => {\r\n    Categories.list().then(\r\n      (cResp) => {\r\n        this.setState({ categories: cResp });\r\n        Expenses.list({ paid_after: moment().startOf('month').unix() }).then(\r\n          (eResp) => {\r\n            this.setState({ expenses: eResp });\r\n            Goals.list().then(\r\n              (gResp) => { this.setState({ loaded: true, monthlyGoal: gResp.monthly }); },\r\n              () => { Alerts.genericError(); },\r\n            );\r\n          },\r\n          () => { Alerts.genericError(); },\r\n        );\r\n      },\r\n      () => { Alerts.genericError(); },\r\n    );\r\n  }\r\n\r\n  categoriesWithExpensesAndSpend() {\r\n    const categories = [];\r\n    this.state.categories.forEach((category) => {\r\n      category.expenses = this.state.expenses.filter((expense) => expense.category_id == category.id);\r\n      category.spend = category.expenses.reduce((sum, exp) => sum + exp.amount, 0);\r\n      categories.push(category);\r\n    });\r\n    return categories;\r\n  }\r\n\r\n  renderExpenseCreateModal() {\r\n    if (!this.state.showExpenseCreateModal) { return ''; }\r\n    return <ExpenseFormModal categories={this.state.categories} onClose={this.closeExpenseCreate} onSave={this.onExpenseSave} />;\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loaded) { return ''; }\r\n\r\n    return (\r\n      <div>\r\n        {this.renderExpenseCreateModal()}\r\n        <div className=\"container\">\r\n          <Overview categoriesWithExpensesAndSpend={this.categoriesWithExpensesAndSpend()} monthlyGoal={this.state.monthlyGoal} onChange={this.loadData} />\r\n        </div>\r\n\r\n        <div className=\"container mt-100\">\r\n          <Chart month={moment().format('MMMM YYYY')} />\r\n        </div>\r\n\r\n        <div className=\"bg-art mt-150\">\r\n          <div className=\"container\">\r\n            <button className=\"btn btn-round btn-dark pos-abs mt-neg-20 z-5\" onClick={this.openExpenseCreate}>+ add an expense</button>\r\n          </div>\r\n          <div className=\"container pv-100 mh-350\">\r\n            <CategoriesList categoriesWithExpensesAndSpend={this.categoriesWithExpensesAndSpend()} onChange={this.loadData} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport { Numerics } from '../../helpers/main';\r\nimport Progress from '../shared/Progress';\r\nimport GoalFormModal from '../goals/FormModal';\r\n\r\nclass Overview extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { showGoalModal: false };\r\n  }\r\n\r\n  openGoal = () => { this.setState({ showGoalModal: true }); }\r\n  closeGoal = () => { this.setState({ showGoalModal: false }); }\r\n  onGoalSave = () => {\r\n    this.closeGoal();\r\n    this.props.onChange();\r\n  }\r\n\r\n  goalDiff() {\r\n    if (!this.props.monthlyGoal) { return 0; }\r\n    return this.props.monthlyGoal - this.totalSpend();\r\n  }\r\n\r\n  totalSpend() {\r\n    return this.props.categoriesWithExpensesAndSpend.reduce((sum, cat) => sum + cat.spend, 0);\r\n  }\r\n\r\n  percentages() {\r\n    const outOf = Math.max(this.props.monthlyGoal, this.totalSpend());\r\n    return this.props.categoriesWithExpensesAndSpend.map((category) => ({ percentage: (category.spend / outOf) * 100, color: category.color }));\r\n  }\r\n\r\n  goalComparisonDisplay() {\r\n    const diff = this.goalDiff();\r\n    return (diff >= 0) ? `${Numerics.centsToDollars(diff)} remaining` : `${Numerics.centsToDollars(Math.abs(diff))} over`;\r\n  }\r\n\r\n  renderGoalModal() {\r\n    if (!this.state.showGoalModal) { return ''; }\r\n    return <GoalFormModal onClose={this.closeGoal} onSave={this.onGoalSave} goals={{ monthly: this.props.monthlyGoal }} />;\r\n  }\r\n\r\n  render() {\r\n    const today = moment();\r\n    const daysLeftInMonth = moment().endOf('month').diff(today, 'days');\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"mb-10\">{today.format('MMMM')} ({daysLeftInMonth} days left)</div>\r\n\r\n        <div className=\"flex row-flex flex-space-between flex-baseline mb-10\">\r\n          <div><h1>{Numerics.centsToDollars(this.totalSpend())}</h1></div>\r\n          {!this.props.monthlyGoal && (\r\n            <a href={null} onClick={this.openGoal} className=\"dim-til-hover\">Set a monthly goal</a>\r\n          )}\r\n          {!!this.props.monthlyGoal && (\r\n            <div className=\"flex flex-baseline\">\r\n              <div className={this.goalDiff() < 0 ? 'text-warning mr-4' : 'text-muted mr-4'}>\r\n                {this.goalDiff() < 0 && (\r\n                  <i className=\"fas fa-exclamation-circle mr-4\" />\r\n                )}\r\n                {this.goalComparisonDisplay()}\r\n              </div>\r\n              <i className=\"far fa-edit dim-til-hover hover-pointer text-muted\" onClick={this.openGoal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <Progress data={this.percentages()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nOverview.defaultProps = {\r\n  categoriesWithExpensesAndSpend: [],\r\n  monthlyGoal: 0,\r\n};\r\n\r\nOverview.propTypes = {\r\n  categoriesWithExpensesAndSpend: PropTypes.array,\r\n  monthlyGoal: PropTypes.number,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DashboardMain from '../components/dashboard/Main';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  ReactDOM.render(\r\n    <DashboardMain {...window.InitialProps} />,\r\n    document.getElementById('dashboard'),\r\n  );\r\n});\r\n"],"mappings":"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","sourceRoot":""}