{"version":3,"file":"js/dashboard-378247cf7985a8af5311.js","sources":["webpack://ontrack/./app/javascript/components/categories/FormModal.jsx","webpack://ontrack/./app/javascript/components/dashboard/CategoriesList.jsx","webpack://ontrack/./app/javascript/components/dashboard/CategoryTile.jsx","webpack://ontrack/./app/javascript/components/dashboard/Main.jsx","webpack://ontrack/./app/javascript/components/dashboard/Overview.jsx","webpack://ontrack/./app/javascript/components/shared/ColorPicker.jsx","webpack://ontrack/./app/javascript/components/shared/PieChart.jsx","webpack://ontrack/./app/javascript/packs/dashboard.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '../shared/Modal';\r\nimport ColorPicker from '../shared/ColorPicker';\r\nimport CurrencyInput from '../shared/CurrencyInput';\r\nimport FieldErrors from '../shared/FieldErrors';\r\nimport { Categories } from '../../api/main';\r\nimport { Alerts } from '../../helpers/main';\r\n\r\nclass FormModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      color: this.props.category.color,\r\n      errors: {},\r\n      goal: this.props.category.monthly_goal || 0,\r\n      name: this.props.category.name,\r\n      submitted: false,\r\n      is_revenue: this.props.is_revenue\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.nameInput.focus();\r\n  }\r\n\r\n  handleNameChange = (e) => { this.setState({ name: e.target.value }); }\r\n  handleGoalChange = (num) => { this.setState({ goal: num }); }\r\n  handleColorChange = (color) => { this.setState({ color }); }\r\n  handleErrors = (key, errs) => { this.setState({ errors: Object.assign(this.state.errors, { [key]: errs }) }); }\r\n  handleDelete = () => {\r\n    Alerts.genericDelete('category').then((result) => {\r\n      if (!result.value) { return; }\r\n      Categories.delete(this.props.category.id).then(\r\n        (resp) => { this.props.onSave(resp); },\r\n        (error) => { error.status == 409 ? Alerts.genericConflict('All expenses must be assigned to a new category first.') : Alerts.genericError(); },\r\n      );\r\n    });\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ submitted: true });\r\n    if (Object.values(this.state.errors).flat().length) { return; }\r\n\r\n    let apiCall = null;\r\n    if (this.props.category.id) {\r\n      apiCall = Categories.update(this.props.category.id, { color: this.state.color, monthly_goal: this.state.goal, name: this.state.name.trim() });\r\n    } else {\r\n      apiCall = Categories.create({ color: this.state.color, monthly_goal: this.state.goal, name: this.state.name.trim(), is_revenue: this.state.is_revenue });\r\n    }\r\n\r\n    apiCall.then(\r\n      (resp) => { this.props.onSave(resp); },\r\n      () => { Alerts.genericError(); },\r\n    );\r\n  }\r\n\r\n  action() {\r\n    if (!this.props.category.id) { return 'Create'; }\r\n    return 'Update';\r\n  }\r\n\r\n  type() {\r\n    if(this.props.is_revenue == 1) {return 'revenue'; }\r\n    return 'expense'\r\n  }\r\n\r\n  renderDelete() {\r\n    if (!this.props.category.id) { return ''; }\r\n    return <a className=\"link-danger\" onClick={this.handleDelete}>Delete</a>;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal onClose={this.props.onClose} title={`${this.action()} ${this.type()} category`}>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"row row-flex\">\r\n            <div className=\"input-group eight columns\">\r\n              <label className=\"required\">Name</label>\r\n              <input\r\n                onChange={this.handleNameChange}\r\n                ref={(input) => { this.nameInput = input; }}\r\n                type=\"text\"\r\n                value={this.state.name}\r\n              />\r\n              <FieldErrors\r\n                handleErrors={this.handleErrors}\r\n                label=\"Name\"\r\n                show={this.state.submitted}\r\n                val={this.state.name.trim()}\r\n                validations={{ required: true }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group ml-auto\">\r\n              <label className=\"required\">Color</label>\r\n              <ColorPicker initialColor={this.state.color} omitColors={this.props.colorsToSkip} onChange={this.handleColorChange} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"input-group\">\r\n              <label>Monthly goal</label>\r\n              <CurrencyInput initialValue={this.state.goal} onChange={this.handleGoalChange} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-actions\">\r\n            <button className=\"btn btn-dark\" type=\"submit\">Save</button>\r\n            {this.renderDelete()}\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nFormModal.defaultProps = {\r\n  category: {\r\n    color: '',\r\n    monthly_goal: 0,\r\n    name: '',\r\n    is_revenue: 0,\r\n  },\r\n  colorsToSkip: [],\r\n};\r\n\r\nFormModal.propTypes = {\r\n  is_revenue: PropTypes.number,\r\n  category: PropTypes.object,\r\n  colorsToSkip: PropTypes.array,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSave: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FormModal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Arr } from '../../helpers/main';\r\nimport CategoryTile from './CategoryTile';\r\nimport CategoryFormModal from '../categories/FormModal';\r\n\r\nclass CategoriesList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { showCategoryCreateModal: false, is_revenue: this.props.is_revenue }\r\n  }\r\n\r\n  openCategoryCreate = () => { this.setState({ showCategoryCreateModal: true }); }\r\n  closeCategoryCreate = () => { this.setState({ showCategoryCreateModal: false }); }\r\n  onCategorySave = () => {\r\n    this.closeCategoryCreate();\r\n    this.props.onChange();\r\n  }\r\n\r\n  colorsToSkip() {\r\n    return this.props.categoriesWithExpensesAndSpend.map((cat) => cat.color);\r\n  }\r\n\r\n  chunkedCategories() {\r\n    const categoriesAndAddButton = this.props.categoriesWithExpensesAndSpend.concat('addButton');\r\n    return Arr.chunk(categoriesAndAddButton, 2);\r\n  }\r\n\r\n  renderCategoryCreateModal() {\r\n    if (!this.state.showCategoryCreateModal) { return ''; }\r\n    return <CategoryFormModal is_revenue={this.state.is_revenue} colorsToSkip={this.colorsToSkip()} onClose={this.closeCategoryCreate} onSave={this.onCategorySave} />;\r\n  }\r\n\r\n  renderCategory(category, idx) {\r\n    let markup = '';\r\n    if (category == 'addButton') {\r\n      markup = (\r\n        <div className=\"category-tile dim-til-hover hover-pointer no-border\" onClick={this.openCategoryCreate}>\r\n          <div className=\"new\">+ Add a category</div>\r\n        </div>\r\n      );\r\n    } else {\r\n      markup = (\r\n        <CategoryTile\r\n          categoryWithExpensesAndSpend={category}\r\n          colorsToSkip={this.colorsToSkip()}\r\n          onChange={this.props.onChange}\r\n        />\r\n      );\r\n    }\r\n\r\n    return <div className=\"six columns\" key={idx}>{markup}</div>;\r\n  }\r\n\r\n  renderRow(listChunk, idx) {\r\n    return (\r\n      <div className=\"row\" key={idx}>\r\n        {listChunk.map((category, i) => this.renderCategory(category, i))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderCategoryCreateModal()}\r\n        {this.chunkedCategories().map((listChunk, idx) => this.renderRow(listChunk, idx))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCategoriesList.defaultProps = {\r\n  categoriesWithExpensesAndSpend: [],\r\n  is_revenue: 0\r\n};\r\n\r\nCategoriesList.propTypes = {\r\n  is_revenue: PropTypes.number,\r\n  categoriesWithExpensesAndSpend: PropTypes.array,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CategoriesList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Numerics } from '../../helpers/main';\r\nimport CategoryFormModal from '../categories/FormModal';\r\n\r\nclass CategoryTile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { showCategoryEditModal: false };\r\n  }\r\n\r\n  openCategoryEdit = () => { this.setState({ showCategoryEditModal: true }); }\r\n  closeCategoryEdit = () => { this.setState({ showCategoryEditModal: false }); }\r\n  onCategorySave = () => {\r\n    this.closeCategoryEdit();\r\n    this.props.onChange();\r\n  }\r\n  onExpenseSave = () => {\r\n    this.closeExpenseCreate();\r\n    this.props.onChange();\r\n  }\r\n\r\n  goalDiff() {\r\n    if (!this.props.categoryWithExpensesAndSpend.monthly_goal) { return 0; }\r\n    return this.props.categoryWithExpensesAndSpend.monthly_goal - this.props.categoryWithExpensesAndSpend.spend;\r\n  }\r\n\r\n  goalComparisonDisplay() {\r\n    if (!this.props.categoryWithExpensesAndSpend.monthly_goal) { return 'No goal set'; }\r\n\r\n    const diff = this.goalDiff();\r\n    return (diff >= 0) ? `${Numerics.centsToDollars(diff)} remaining` : `${Numerics.centsToDollars(Math.abs(diff))} over`;\r\n  }\r\n\r\n  normalizedPercentage() {\r\n    if (!this.props.categoryWithExpensesAndSpend.monthly_goal) { return 0; }\r\n    return Math.min(100, this.props.categoryWithExpensesAndSpend.spend / this.props.categoryWithExpensesAndSpend.monthly_goal * 100);\r\n  }\r\n\r\n  renderCategoryEditModal() {\r\n    if (!this.state.showCategoryEditModal) { return ''; }\r\n    return (\r\n      <CategoryFormModal\r\n        onClose={this.closeCategoryEdit}\r\n        onSave={this.onCategorySave}\r\n        category={this.props.categoryWithExpensesAndSpend}\r\n        colorsToSkip={this.props.colorsToSkip}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const category = this.props.categoryWithExpensesAndSpend;\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"category-tile flex flex-space-between tint-on-hover hover-pointer\"\r\n          style={{ borderColor: category.color }}\r\n          onClick={this.openCategoryEdit}\r\n        >\r\n          <h3>{category.name}</h3>\r\n\r\n          <div className=\"text-right\">\r\n            <h2 className={category.spend > 0 ? '' : 'text-muted'}>{Numerics.centsToDollars(category.spend)}</h2>\r\n            <div className={this.goalDiff() < 0 ? 'text-warning' : 'text-muted'}>\r\n              {this.goalDiff() < 0 && (\r\n                <i className=\"fas fa-exclamation-circle mr-4\" />\r\n              )}\r\n              {this.goalComparisonDisplay()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.renderCategoryEditModal()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nCategoryTile.defaultProps = {\r\n  categoryWithExpensesAndSpend: {},\r\n  colorsToSkip: [],\r\n};\r\n\r\nCategoryTile.propTypes = {\r\n  categoryWithExpensesAndSpend: PropTypes.object,\r\n  colorsToSkip: PropTypes.array,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CategoryTile;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport Overview from './Overview';\r\nimport CategoriesList from './CategoriesList';\r\nimport ExpenseFormModal from '../expenses/FormModal';\r\nimport PieChart from '../shared/PieChart';\r\nimport { Categories, Revenues, Expenses, Goals, Reports } from '../../api/main';\r\nimport { Alerts } from '../../helpers/main';\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: [],\r\n      expenseCategories: [],\r\n      revenueCategories: [],\r\n      expenses: [],\r\n      revenues: [],\r\n      sumExpenses: 0,\r\n      sumRevenues: 0,\r\n      loadedexpenses: false,\r\n      loadedrevenues: false,\r\n      monthlyGoal: 0,\r\n      showExpenseCreateModal: false,\r\n      showRevenueCreateModal: false,\r\n      data: [],\r\n      labels: [],\r\n      colors: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.reloadData();\r\n  }\r\n\r\n  openExpenseCreate = () => { this.setState({ showExpenseCreateModal: true }); }\r\n  closeExpenseCreate = () => { this.setState({ showExpenseCreateModal: false }); }\r\n  openRevenueCreate = () => { this.setState({ showRevenueCreateModal: true }); }\r\n  closeRevenueCreate = () => { this.setState({ showRevenueCreateModal: false }); }\r\n  onExpenseSave = () => {\r\n    this.closeExpenseCreate();\r\n    this.closeRevenueCreate();\r\n    this.reloadData();\r\n  }\r\n\r\n  reloadData = () => {\r\n    this.loadCategories();\r\n    this.loadExpensesCategories();\r\n    this.loadRevenuesCategories();\r\n    this.loadExpensesData();\r\n    this.loadRevenueData();\r\n    this.loadPieChartData(moment().format('MMMM YYYY'));\r\n  }\r\n\r\n  loadCategories = () => {\r\n    Categories.list().then(\r\n      (cResp) => { this.setState({ categories: cResp }); },\r\n      () => { Alerts.error(\"Categories didn't load correctly\"); }\r\n    );\r\n  }\r\n\r\n  loadExpensesCategories = () => {\r\n    Categories.listExpenses().then(\r\n      (cResp) => { this.setState({ expenseCategories: cResp }); },\r\n      () => { Alerts.error(\"Categories didn't load correctly\"); }\r\n    );\r\n  }\r\n\r\n  loadRevenuesCategories = () => {\r\n    Categories.listRevenues().then(\r\n      (cResp) => { this.setState({ revenueCategories: cResp }); },\r\n      () => { Alerts.error(\"Categories didn't load correctly\"); }\r\n    );\r\n  }\r\n\r\n  loadExpensesData = () => {\r\n    Expenses.list({ paid_after: moment().startOf('month').unix() }).then(\r\n      (eResp) => {\r\n        this.setState({ expenses: eResp });\r\n        Goals.list().then(\r\n          (gResp) => { this.setState({ loaded: true, monthlyGoal: gResp.monthly }); },\r\n          () => { Alerts.error(\"Goal of expenses didn't load!\"); },\r\n        );\r\n      },\r\n      () => { Alerts.error(\"Expenses didn't load correctly!\"); },\r\n    );\r\n  }\r\n\r\n  loadRevenueData = () => {\r\n    Revenues.list({ paid_after: moment().startOf('month').unix() }).then(\r\n      (rResp) => {\r\n        this.setState({ revenues: rResp});\r\n      },\r\n      () => { Alerts.error(\"Revenues didn't load correctly!\") }\r\n    );\r\n  }\r\n\r\n  categoriesWithExpensesAndSpend() {\r\n    const categories = [];\r\n    this.state.categories.forEach((category) => {\r\n      category.expenses = this.state.expenses.filter((expense) => expense.category_id == category.id);\r\n      category.spend = category.expenses.reduce((sum, exp) => sum + exp.amount, 0);\r\n      categories.push(category);\r\n    });\r\n    return categories;\r\n  }\r\n\r\n  EcategoriesWithExpensesAndSpend() {\r\n    const categories = [];\r\n    this.state.expenseCategories.forEach((category) => {\r\n      category.expenses = this.state.expenses.filter((expense) => expense.category_id == category.id);\r\n      category.spend = category.expenses.reduce((sum, exp) => sum + exp.amount, 0);\r\n      categories.push(category);\r\n    });\r\n    return categories;\r\n  }\r\n\r\n  RcategoriesWithExpensesAndSpend() {\r\n    const categories = [];\r\n    this.state.revenueCategories.forEach((category) => {\r\n      category.revenues = this.state.revenues.filter((expense) => expense.category_id == category.id);\r\n      category.spend = category.revenues.reduce((sum, exp) => sum + exp.amount, 0);\r\n      categories.push(category);\r\n    });\r\n    return categories;\r\n  }\r\n\r\n  renderExpenseCreateModal() {\r\n    if (!this.state.showExpenseCreateModal) { return ''; }\r\n    return <ExpenseFormModal categories={this.state.expenseCategories} title=\"Add an expense\" onClose={this.closeExpenseCreate} onSave={this.onExpenseSave} />;\r\n  }\r\n\r\n  renderRevenueCreateModal() {\r\n    if (!this.state.showRevenueCreateModal) { return ''; }\r\n    return <ExpenseFormModal AddRevenue={1} categories={this.state.revenueCategories} title=\"Add a revenue\" onClose={this.closeRevenueCreate} onSave={this.onExpenseSave} />;\r\n  }\r\n\r\n  loadSum = () => {\r\n    var indexRev = 0;\r\n\r\n    this.state.categories.forEach((category) => {\r\n      if (category.is_revenue == 1) {\r\n        category.revenues = this.state.revenues.filter((revenue) => revenue.category_id == category.id);\r\n        category.revenues.forEach((revenue) => {\r\n          indexRev += revenue.amount;\r\n        });\r\n      }\r\n    });\r\n\r\n    return (indexRev/100);\r\n  }\r\n\r\n  loadPieChartData = (month) => {\r\n    Reports.month({ month }).then(\r\n      (resp) => {\r\n\r\n        const revenue = this.loadSum();\r\n        \r\n        const data = resp.category_pourcentage.map((r) => \r\n          Number.parseFloat((r.spend/revenue)*100).toFixed(3)\r\n        )\r\n        const labels = resp.category_pourcentage.map((r) => r.category)\r\n        const colors = resp.category_pourcentage.map((r) => r.color)\r\n\r\n        this.setState({ data: data });\r\n        this.setState({ labels: labels });\r\n        this.setState({ colors: colors });\r\n\r\n        return true;\r\n      },\r\n      () => { Alerts.error(\"The data for the pie chart didn't load correctly!\") }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loaded) { return ''; }\r\n\r\n    return (\r\n      <div>\r\n        {this.renderExpenseCreateModal()}\r\n        {this.renderRevenueCreateModal()}\r\n        <div className=\"container\">\r\n          <Overview categoriesWithExpensesAndSpend={this.categoriesWithExpensesAndSpend()} monthlyGoal={this.state.monthlyGoal} onChange={this.reloadData} />\r\n        </div>\r\n\r\n        <div className=\"container mt-100\">\r\n          <div className=\"chart-container-short\">\r\n            <PieChart labels={this.state.labels} data={this.state.data} colors={this.state.colors} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-art-2\">\r\n          <div className=\"container\">\r\n            <button className=\"btn btn-round btn-dark pos-abs mt-neg-20 z-5\" onClick={this.openExpenseCreate}>+ add an expense</button>\r\n          </div>\r\n          <div className=\"container pv-100\">\r\n            <CategoriesList categoriesWithExpensesAndSpend={this.EcategoriesWithExpensesAndSpend()} onChange={this.reloadData} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-art top-border\">\r\n          <div className=\"container\">\r\n            <button className=\"btn btn-round btn-dark pos-abs mt-neg-20 z-5\" onClick={this.openRevenueCreate}>+ add a revenue</button> {}\r\n          </div>\r\n          <div className=\"container pv-100\">\r\n            <CategoriesList is_revenue={1} categoriesWithExpensesAndSpend={this.RcategoriesWithExpensesAndSpend()} onChange={this.reloadData} />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport { Numerics } from '../../helpers/main';\r\nimport Progress from '../shared/Progress';\r\nimport GoalFormModal from '../goals/FormModal';\r\nimport { Budgets } from '../../api/main';\r\n\r\nclass Overview extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { showGoalModal: false, selectedBudgetName: \"\"};\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getSelectedBudgetName();\r\n  }\r\n\r\n  openGoal = () => { this.setState({ showGoalModal: true }); }\r\n  closeGoal = () => { this.setState({ showGoalModal: false }); }\r\n  onGoalSave = () => {\r\n    this.closeGoal();\r\n    this.props.onChange();\r\n  }\r\n\r\n  goalDiff() {\r\n    if (!this.props.monthlyGoal) { return 0; }\r\n    return this.props.monthlyGoal - this.totalSpend();\r\n  }\r\n\r\n  totalSpend() {\r\n    return this.props.categoriesWithExpensesAndSpend.reduce((sum, cat) => sum + cat.spend, 0);\r\n  }\r\n\r\n  percentages() {\r\n    const outOf = Math.max(this.props.monthlyGoal, this.totalSpend());\r\n    return this.props.categoriesWithExpensesAndSpend.map((category) => ({ percentage: (category.spend / outOf) * 100, color: category.color }));\r\n  }\r\n\r\n  goalComparisonDisplay() {\r\n    const diff = this.goalDiff();\r\n    return (diff >= 0) ? `${Numerics.centsToDollars(diff)} remaining` : `${Numerics.centsToDollars(Math.abs(diff))} over`;\r\n  }\r\n\r\n  renderGoalModal() {\r\n    if (!this.state.showGoalModal) { return ''; }\r\n    return <GoalFormModal onClose={this.closeGoal} onSave={this.onGoalSave} goals={{ monthly: this.props.monthlyGoal }} />;\r\n  }\r\n\r\n  getSelectedBudgetName = async() =>{\r\n    const selectedBudget = await Budgets.getSelectedBudgetName()\r\n    .then(\r\n      (resp) => {return resp;},\r\n      () => {return '';}\r\n      );\r\n\r\n    this.setState({selectedBudgetName: selectedBudget});\r\n  }\r\n\r\n\r\n  render() {\r\n    const today = moment();\r\n    const daysLeftInMonth = moment().endOf('month').diff(today, 'days');\r\n\r\n    return (\r\n      <div>\r\n        <h2>{this.state.selectedBudgetName}</h2>\r\n        <div className=\"mb-10\">{today.format('MMMM')} ({daysLeftInMonth} days left)</div>\r\n\r\n        <div className=\"flex row-flex flex-space-between flex-baseline mb-10\">\r\n          <div><h1>{Numerics.centsToDollars(this.totalSpend())}</h1></div>\r\n          {!this.props.monthlyGoal && (\r\n            <a href={null} onClick={this.openGoal} className=\"dim-til-hover\">Set a monthly goal</a>\r\n          )}\r\n          {!!this.props.monthlyGoal && (\r\n            <div className=\"flex flex-baseline\">\r\n              <div className={this.goalDiff() < 0 ? 'text-warning mr-4' : 'text-muted mr-4'}>\r\n                {this.goalDiff() < 0 && (\r\n                  <i className=\"fas fa-exclamation-circle mr-4\" />\r\n                )}\r\n                {this.goalComparisonDisplay()}\r\n              </div>\r\n              <i className=\"far fa-edit dim-til-hover hover-pointer text-muted\" onClick={this.openGoal} />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <Progress data={this.percentages()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nOverview.defaultProps = {\r\n  categoriesWithExpensesAndSpend: [],\r\n  monthlyGoal: 0,\r\n};\r\n\r\nOverview.propTypes = {\r\n  categoriesWithExpensesAndSpend: PropTypes.array,\r\n  monthlyGoal: PropTypes.number,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst QUICK_COLORS = [\r\n  '#899b9c',\r\n  '#88b779',\r\n  '#0d947a',\r\n  '#248ed5',\r\n  '#9053ad',\r\n  '#ffda7d',\r\n  '#f49119',\r\n  '#e64637',\r\n  '#dd5e8e',\r\n  '#ba3427',\r\n  '#b3b3b3',\r\n  '#c5e276',\r\n  '#0ab191',\r\n  '#95dce8',\r\n  '#c67171',\r\n  '#8e5b4c',\r\n  '#e9eeef',\r\n  '#9ad8a9',\r\n  '#c7f4f9',\r\n  '#d9c3ea',\r\n  '#fffacf',\r\n  '#ffcea6',\r\n  '#f9b6b6',\r\n  '#c7b299',\r\n  '#2d4053',\r\n  '#141516',\r\n  '#603813',\r\n];\r\n\r\nclass ColorPicker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { initialColor: this.props.initialColor, color: this.props.initialColor, useTextField: false };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.state.initialColor.length) {\r\n      this.setState({ color: this.colors()[0] });\r\n      this.props.onChange(this.colors()[0]);\r\n    }\r\n  }\r\n\r\n  handleChange = (color) => {\r\n    this.setState({ color });\r\n    this.props.onChange(color);\r\n  }\r\n\r\n  useTextField = () => {\r\n    this.setState({ useTextField: true });\r\n  }\r\n\r\n  colors() {\r\n    const availColors = [];\r\n    if (this.state.initialColor.length) { availColors.push(this.state.initialColor); }\r\n    for (const color of QUICK_COLORS) {\r\n      if (availColors.map((el) => el.toLowerCase()).includes(color.toLowerCase())) { continue; }\r\n      if (this.props.omitColors.length && this.props.omitColors.map((el) => el.toLowerCase()).includes(color.toLowerCase())) { continue; }\r\n      if (availColors.length >= 15) { break; }\r\n\r\n      availColors.push(color);\r\n    }\r\n\r\n    return availColors;\r\n  }\r\n\r\n  renderSwatches() {\r\n    return this.colors().map((color, idx) => (\r\n      <div\r\n        onClick={() => this.handleChange(color)}\r\n        key={idx}\r\n        className={`sample hover-pointer ${color.toLowerCase() == this.state.color.toLowerCase() ? 'active' : ''}`}\r\n        style={{ backgroundColor: color }}\r\n      />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"color-picker\">\r\n        {!this.state.useTextField && (\r\n          <>\r\n            {this.renderSwatches()}\r\n            <div className=\"mr-10 mt-5\">\r\n              <button onClick={this.useTextField} type=\"button\" className=\"btn btn-sm btn-full\">Enter hex instead</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {this.state.useTextField && (\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"#fff\"\r\n            value={this.state.color}\r\n            onChange={e => this.handleChange(e.target.value)}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nColorPicker.defaultProps = {\r\n  omitColors: [],\r\n  initialColor: '',\r\n};\r\n\r\nColorPicker.propTypes = {\r\n  initialColor: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  omitColors: PropTypes.array,\r\n};\r\n\r\nexport default ColorPicker;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Chart from 'chart.js';\r\n\r\nconst PieChart = ({ data, labels, colors }) => {\r\n  const [randomId] = useState(Math.random().toString());\r\n  const [instance, setInstance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    instance?.destroy();\r\n\r\n    const size = data.length;\r\n\r\n    const config = {\r\n      type: 'pie',\r\n      data: {\r\n        datasets: [{ data, backgroundColor: colors }],\r\n        labels,\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display:true,\r\n          position:'right'\r\n        },\r\n        tooltips: {\r\n          callbacks: {\r\n            label: t => `${labels[t.index]}: ${data[t.index]}%`,\r\n          },\r\n        },\r\n      },\r\n    }\r\n\r\n    const newInstance = new Chart(document.getElementById(randomId), config);\r\n\r\n    setInstance(newInstance);\r\n  }, [data, labels]);\r\n\r\n  return (\r\n    <div>\r\n      <canvas id={randomId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nPieChart.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  labels: PropTypes.array.isRequired,\r\n  colors: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default PieChart;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DashboardMain from '../components/dashboard/Main';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  ReactDOM.render(\r\n    <DashboardMain {...window.InitialProps} />,\r\n    document.getElementById('dashboard'),\r\n  );\r\n});\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAFA;AAgBA;AAAA;AAAA;AAAA;AACA;AAjBA;AAiBA;AAAA;AAAA;AAAA;AACA;AAlBA;AAkBA;AAAA;AAAA;AAAA;AACA;AAnBA;AAmBA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AApBA;AAqBA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AA7BA;AA8BA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AA5CA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAUA;AACA;;;AACA;AACA;AACA;AACA;AAgzGA;AACA;AA0GA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;A;;;;;;;;;;;;;;;;;;;;;;;ACvhEA;AACA;AAiEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AACA;A;;;;;;;;;;;;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AACA;AANA;AAMA;AAAA;AAAA;AAAA;AACA;AAPA;AAQA;AACA;AAAA;AACA;AACA;AAXA;AAYA;AACA;AAAA;AACA;AACA;AAbA;AAAA;AAAA;AAFA;AAGA;AACA;;;AAYA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;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","sourceRoot":""}