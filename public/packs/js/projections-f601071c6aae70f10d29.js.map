{"version":3,"file":"js/projections-f601071c6aae70f10d29.js","sources":["webpack://ontrack/./app/javascript/components/projections/Main.jsx","webpack://ontrack/./app/javascript/packs/projections.jsx"],"sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\nimport Overview from './Overview';\r\nimport CategoriesList from './CategoriesList';\r\nimport ExpenseFormModal from '../expenses/FormModal';\r\nimport Chart from './Chart';\r\nimport { Categories, Expenses, Goals } from '../../api/main';\r\nimport { Alerts } from '../../helpers/main';\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = {\r\n    //   categories: [],\r\n    //   expenses: [],\r\n    //   loaded: false,\r\n    //   monthlyGoal: 0,\r\n    //   showExpenseCreateModal: false,\r\n    // };\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   this.loadData();\r\n  // }\r\n\r\n  // openExpenseCreate = () => { this.setState({ showExpenseCreateModal: true }); }\r\n  // closeExpenseCreate = () => { this.setState({ showExpenseCreateModal: false }); }\r\n  // onExpenseSave = () => {\r\n  //   this.closeExpenseCreate();\r\n  //   this.loadData();\r\n  // }\r\n\r\n  // loadData = () => {\r\n  //   Categories.list().then(\r\n  //     (cResp) => {\r\n  //       this.setState({ categories: cResp });\r\n  //       Expenses.list({ paid_after: moment().startOf('month').unix() }).then(\r\n  //         (eResp) => {\r\n  //           this.setState({ expenses: eResp });\r\n  //           Goals.list().then(\r\n  //             (gResp) => { this.setState({ loaded: true, monthlyGoal: gResp.monthly }); },\r\n  //             () => { Alerts.genericError(); },\r\n  //           );\r\n  //         },\r\n  //         () => { Alerts.genericError(); },\r\n  //       );\r\n  //     },\r\n  //     () => { Alerts.genericError(); },\r\n  //   );\r\n  // }\r\n\r\n  // categoriesWithExpensesAndSpend() {\r\n  //   const categories = [];\r\n  //   this.state.categories.forEach((category) => {\r\n  //     category.expenses = this.state.expenses.filter((expense) => expense.category_id == category.id);\r\n  //     category.spend = category.expenses.reduce((sum, exp) => sum + exp.amount, 0);\r\n  //     categories.push(category);\r\n  //   });\r\n  //   return categories;\r\n  // }\r\n\r\n  // renderExpenseCreateModal() {\r\n  //   if (!this.state.showExpenseCreateModal) { return ''; }\r\n  //   return <ExpenseFormModal categories={this.state.categories} onClose={this.closeExpenseCreate} onSave={this.onExpenseSave} />;\r\n  // }\r\n\r\n  render() {\r\n    // if (!this.state.loaded) { return ''; }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Testing!</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ProjectionsMain from '../components/projections/Main';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  ReactDOM.render(\r\n    <ProjectionsMain {...window.InitialProps} />,\r\n    document.getElementById('projections'),\r\n  );\r\n});\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;AAlEA;AACA;AAmEA;AACA;A;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;A;;;;;;;;;;A","sourceRoot":""}