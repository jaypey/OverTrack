{"version":3,"file":"js/create_config-b5a5affef7e9b2b9aefc.js","sources":["webpack://ontrack/./app/javascript/components/expenses/CreateConfig.jsx","webpack://ontrack/./app/javascript/components/shared/CurrencyInput.jsx","webpack://ontrack/./app/javascript/components/shared/DatePicker.jsx","webpack://ontrack/./app/javascript/packs/create_config.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DatePicker from '../shared/DatePicker';\r\nimport CurrencyInput from '../shared/CurrencyInput';\r\nimport { Expenses } from '../../api/main';\r\nimport { Alerts } from '../../helpers/main';\r\n\r\nclass CreateConfig extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = {\r\n    //   expenses: props.expenses,\r\n    //   submitting: false,\r\n    // };\r\n  }\r\n\r\n  // handleExpenseDelete = (idx) => {\r\n  //   const modifiedExpenses = [...this.state.expenses]; // Make a copy\r\n  //   modifiedExpenses.splice(idx, 1);\r\n  //   this.setState({ expenses: modifiedExpenses });\r\n  // }\r\n\r\n  // updateExpense = (idx, updates) => {\r\n  //   const modifiedExpenses = [...this.state.expenses]; // Make a copy\r\n  //   const modifiedExpense = Object.assign({ ...modifiedExpenses[idx] }, updates);\r\n  //   modifiedExpenses[idx] = modifiedExpense;\r\n  //   this.setState({ expenses: modifiedExpenses });\r\n  // }\r\n\r\n  // renderEmptyState() {\r\n  //   if (this.props.expenses.length) { return ''; }\r\n  //   return (\r\n  //     <div className=\"empty-or-error-status mt-30\">\r\n  //       <div className=\"status-text\">\r\n  //         <h2>Nothing to import!</h2>\r\n  //         <div>There are no expenses to import from your CSV.</div>\r\n  //         <div className=\"mt-10\">\r\n  //           <a href=\"/expense_uploads/new\" className=\"btn btn-dark\">Go back</a>\r\n  //         </div>\r\n  //       </div>\r\n  //       <img className=\"status-image\" src={window.historian} />\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  // cancel() {\r\n  //   window.location = '/expense_uploads/new';\r\n  // }\r\n\r\n  // submit = () => {\r\n  //   this.setState({ submitting: true });\r\n\r\n  //   Expenses.bulkCreate({ expenses: this.state.expenses }).then(\r\n  //     () => {\r\n  //       this.setState({ submitting: false });\r\n  //       Alerts.success('Your import was successful.', () => { window.location = '/expenses'; });\r\n  //     },\r\n  //     () => {\r\n  //       this.setState({ submitting: false });\r\n  //       Alerts.error('Something went wrong! Double check that your inputs are all valid.');\r\n  //     },\r\n  //   );\r\n  // }\r\n\r\n  // renderExpense(expense, idx) {\r\n  //   return (\r\n  //     <tr key={`${expense.paid_at}-${expense.amount}-${expense.description}-${idx}`}>\r\n  //       <td className=\"input-group mw-150\">\r\n  //         <DatePicker onChange={(val) => this.updateExpense(idx, { paid_at: val })} value={new Date(expense.paid_at)} className=\"bg-gray-slight-contrast\" />\r\n  //       </td>\r\n\r\n  //       <td className=\"input-group mw-200\">\r\n  //         <select defaultValue={expense.category_id} onChange={(e) => this.updateExpense(idx, { category_id: e.target.value })} className=\"bg-gray-slight-contrast\">\r\n  //           {this.props.categories.map((c) => <option key={c.id} value={c.id}>{c.name}</option>)}\r\n  //         </select>\r\n  //       </td>\r\n\r\n  //       <td className=\"input-group mw-100\">\r\n  //         <CurrencyInput\r\n  //           initialValue={expense.amount}\r\n  //           onBlur={(val) => this.updateExpense(idx, { amount: val })}\r\n  //           allowNegative\r\n  //           className=\"bg-gray-slight-contrast\"\r\n  //         />\r\n  //       </td>\r\n\r\n  //       <td className=\"input-group mw-300\">\r\n  //         <input defaultValue={expense.description} onBlur={(e) => { if (e.target.value.trim() != expense.description) { this.updateExpense(idx, { description: e.target.value.trim() }); } }} className=\"bg-gray-slight-contrast\" />\r\n  //       </td>\r\n\r\n  //       <td>\r\n  //         <a onClick={() => this.handleExpenseDelete(idx)} className=\"dim-til-hover\"><i className=\"fa fa-times\" /></a>\r\n  //       </td>\r\n  //     </tr>\r\n  //   );\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      // <div className=\"container pb-100\">\r\n      //   {this.renderEmptyState()}\r\n\r\n      //   {this.props.expenses.length > 0 && (\r\n      //     <>\r\n      //       <h1>Review import ({this.state.expenses.length} items)</h1>\r\n      //       <div>\r\n      //         <div className=\"mt-30 mb-10\">\r\n      //           <em className=\"text-muted\">Make any changes you want before submitting at the bottom of the page.</em>\r\n      //         </div>\r\n      //         <div className=\"overflow-x bg-gray p-10\">\r\n      //           <table className=\"table\">\r\n      //             <thead>\r\n      //               <tr>\r\n      //                 <th>Date</th>\r\n      //                 <th>Category</th>\r\n      //                 <th>Amount</th>\r\n      //                 <th>Description</th>\r\n      //                 <th />\r\n      //               </tr>\r\n      //             </thead>\r\n      //             <tbody>\r\n      //               {this.state.expenses.map((exp, idx) => this.renderExpense(exp, idx))}\r\n      //             </tbody>\r\n      //           </table>\r\n      //         </div>\r\n      //       </div>\r\n\r\n      //       <div className=\"form-actions\">\r\n      //         <button\r\n      //           type=\"submit\"\r\n      //           className=\"btn btn-dark\"\r\n      //           onClick={this.submit}\r\n      //           disabled={this.state.submitting}\r\n      //         >\r\n      //           {this.state.submitting ? 'Submitting...' : 'Submit'}\r\n      //         </button>\r\n      //         <button type=\"button\" className=\"btn\" onClick={this.cancel}>Cancel</button>\r\n      //       </div>\r\n      //     </>\r\n      //   )}\r\n      // </div>\r\n      <>\r\n      Config Form for CSV\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// CreateConfig.defaultProps = {\r\n//   categories: [],\r\n//   expenses: [],\r\n// };\r\n\r\n// CreateConfig.propTypes = {\r\n//   categories: PropTypes.array,\r\n//   expenses: PropTypes.array,\r\n// };\r\n\r\nexport default CreateConfig;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\n\nclass CurrencyInput extends React.Component {\n  handleChange = (e) => {\n    if (!this.props.onChange) { return; }\n    const num = e.target.value.replace(/\\$|,/g, '');\n    const cents = parseInt(parseFloat(num).toFixed(2).replace(/\\./g, ''));\n    const normalized = isNaN(cents) ? 0 : cents;\n    this.props.onChange(normalized);\n  }\n\n  handleBlur = (e) => {\n    if (!this.props.onBlur) { return; }\n    const num = e.target.value.replace(/\\$|,/g, '');\n    const cents = parseInt(parseFloat(num).toFixed(2).replace(/\\./g, ''));\n    const normalized = isNaN(cents) ? 0 : cents;\n    this.props.onBlur(normalized);\n  }\n\n  render() {\n    const defaultMaskOptions = {\n      prefix: '$',\n      includeThousandsSeparator: true,\n      thousandsSeparatorSymbol: ',',\n      allowDecimal: true,\n      decimalSymbol: '.',\n      decimalLimit: 2,\n      integerLimit: 7,\n      allowLeadingZeroes: false,\n      allowNegative: this.props.allowNegative,\n    };\n    const currencyMask = createNumberMask(defaultMaskOptions);\n\n    return (\n      <MaskedInput\n        placeholder=\"$0.00\"\n        inputMode=\"decimal\"\n        mask={currencyMask}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        defaultValue={this.props.initialValue ? (this.props.initialValue / 100).toFixed(2) : ''}\n        className={this.props.className}\n      />\n    );\n  }\n}\n\nCurrencyInput.defaultProps = {\n  initialValue: 0,\n  allowNegative: false,\n  className: '',\n  onBlur: null,\n  onChange: null,\n};\n\nCurrencyInput.propTypes = {\n  initialValue: PropTypes.number,\n  allowNegative: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  className: PropTypes.string,\n};\n\nexport default CurrencyInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DatePicker from 'react-datepicker';\n\nclass Picker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { startDate: this.props.value };\n  }\n\n  handleChange = (val) => {\n    this.setState({ startDate: val });\n    this.props.onChange(val);\n  }\n\n  render() {\n    return (\n      <DatePicker onChange={this.handleChange} selected={this.state.startDate} className={this.props.className} />\n    );\n  }\n}\n\nPicker.defaultProps = {\n  value: new Date(),\n  className: '',\n};\n\nPicker.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport default Picker;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CreateConfig from '../components/expenses/CreateConfig';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(\n    <CreateConfig/>,\n    document.getElementById('create_config'),\n  );\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CA;AA+CA;AACA;;AA3IA;AA8IA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;A;;;;;;;;;;;;;;;;;;;;;;;;AC/JA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;;AA3CA;AACA;AA4CA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;A;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAFA;AAGA;AACA;;;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAhBA;AACA;AAiBA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AACA;A;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;A;;;;;;;;;;A","sourceRoot":""}