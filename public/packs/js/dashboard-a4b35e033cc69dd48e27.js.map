{"version":3,"file":"js/dashboard-a4b35e033cc69dd48e27.js","sources":["webpack://ontrack/./app/javascript/components/categories/FormModal.jsx","webpack://ontrack/./app/javascript/components/dashboard/CategoriesList.jsx","webpack://ontrack/./app/javascript/components/dashboard/CategoryTile.jsx","webpack://ontrack/./app/javascript/components/dashboard/Main.jsx","webpack://ontrack/./app/javascript/components/dashboard/Overview.jsx","webpack://ontrack/./app/javascript/components/expenses/FormModal.jsx","webpack://ontrack/./app/javascript/components/goals/FormModal.jsx","webpack://ontrack/./app/javascript/components/shared/ColorPicker.jsx","webpack://ontrack/./app/javascript/components/shared/CurrencyInput.jsx","webpack://ontrack/./app/javascript/components/shared/DatePicker.jsx","webpack://ontrack/./app/javascript/components/shared/FieldErrors.jsx","webpack://ontrack/./app/javascript/components/shared/Modal.jsx","webpack://ontrack/./app/javascript/components/shared/PieChart.jsx","webpack://ontrack/./app/javascript/components/shared/Progress.jsx","webpack://ontrack/./app/javascript/packs/dashboard.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../shared/Modal';\nimport ColorPicker from '../shared/ColorPicker';\nimport CurrencyInput from '../shared/CurrencyInput';\nimport FieldErrors from '../shared/FieldErrors';\nimport { Categories } from '../../api/main';\nimport { Alerts } from '../../helpers/main';\n\nclass FormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: this.props.category.color,\n      errors: {},\n      goal: this.props.category.monthly_goal || 0,\n      name: this.props.category.name,\n      submitted: false,\n      is_revenue: this.props.is_revenue\n    };\n  }\n\n  componentDidMount() {\n    this.nameInput.focus();\n  }\n\n  handleNameChange = (e) => { this.setState({ name: e.target.value }); }\n  handleGoalChange = (num) => { this.setState({ goal: num }); }\n  handleColorChange = (color) => { this.setState({ color }); }\n  handleErrors = (key, errs) => { this.setState({ errors: Object.assign(this.state.errors, { [key]: errs }) }); }\n  handleDelete = () => {\n    Alerts.genericDelete('category').then((result) => {\n      if (!result.value) { return; }\n      Categories.delete(this.props.category.id).then(\n        (resp) => { this.props.onSave(resp); },\n        (error) => { error.status == 409 ? Alerts.genericConflict('All expenses must be assigned to a new category first.') : Alerts.genericError(); },\n      );\n    });\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.setState({ submitted: true });\n    if (Object.values(this.state.errors).flat().length) { return; }\n\n    let apiCall = null;\n    if (this.props.category.id) {\n      apiCall = Categories.update(this.props.category.id, { color: this.state.color, monthly_goal: this.state.goal, name: this.state.name.trim() });\n    } else {\n      apiCall = Categories.create({ color: this.state.color, monthly_goal: this.state.goal, name: this.state.name.trim(), is_revenue: this.state.is_revenue });\n    }\n\n    apiCall.then(\n      (resp) => { this.props.onSave(resp); },\n      () => { Alerts.genericError(); },\n    );\n  }\n\n  action() {\n    if (!this.props.category.id) { return 'Create'; }\n    return 'Update';\n  }\n\n  type() {\n    if(this.props.is_revenue == 1) {return 'revenue'; }\n    return 'expense'\n  }\n\n  renderDelete() {\n    if (!this.props.category.id) { return ''; }\n    return <a className=\"link-danger\" onClick={this.handleDelete}>Delete</a>;\n  }\n\n  render() {\n    return (\n      <Modal onClose={this.props.onClose} title={`${this.action()} ${this.type()} category`}>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"row row-flex\">\n            <div className=\"input-group eight columns\">\n              <label className=\"required\">Name</label>\n              <input\n                onChange={this.handleNameChange}\n                ref={(input) => { this.nameInput = input; }}\n                type=\"text\"\n                value={this.state.name}\n              />\n              <FieldErrors\n                handleErrors={this.handleErrors}\n                label=\"Name\"\n                show={this.state.submitted}\n                val={this.state.name.trim()}\n                validations={{ required: true }}\n              />\n            </div>\n\n            <div className=\"input-group ml-auto\">\n              <label className=\"required\">Color</label>\n              <ColorPicker initialColor={this.state.color} omitColors={this.props.colorsToSkip} onChange={this.handleColorChange} />\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"input-group\">\n              <label>Monthly goal</label>\n              <CurrencyInput initialValue={this.state.goal} onChange={this.handleGoalChange} />\n            </div>\n          </div>\n          <div className=\"form-actions\">\n            <button className=\"btn btn-dark\" type=\"submit\">Save</button>\n            {this.renderDelete()}\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n\nFormModal.defaultProps = {\n  category: {\n    color: '',\n    monthly_goal: 0,\n    name: '',\n    is_revenue: 0,\n  },\n  colorsToSkip: [],\n};\n\nFormModal.propTypes = {\n  is_revenue: PropTypes.number,\n  category: PropTypes.object,\n  colorsToSkip: PropTypes.array,\n  onClose: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default FormModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Arr } from '../../helpers/main';\nimport CategoryTile from './CategoryTile';\nimport CategoryFormModal from '../categories/FormModal';\n\nclass CategoriesList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showCategoryCreateModal: false, is_revenue: this.props.is_revenue }\n  }\n\n  openCategoryCreate = () => { this.setState({ showCategoryCreateModal: true }); }\n  closeCategoryCreate = () => { this.setState({ showCategoryCreateModal: false }); }\n  onCategorySave = () => {\n    this.closeCategoryCreate();\n    this.props.onChange();\n  }\n\n  colorsToSkip() {\n    return this.props.categoriesWithExpensesAndSpend.map((cat) => cat.color);\n  }\n\n  chunkedCategories() {\n    const categoriesAndAddButton = this.props.categoriesWithExpensesAndSpend.concat('addButton');\n    return Arr.chunk(categoriesAndAddButton, 2);\n  }\n\n  renderCategoryCreateModal() {\n    if (!this.state.showCategoryCreateModal) { return ''; }\n    return <CategoryFormModal is_revenue={this.state.is_revenue} colorsToSkip={this.colorsToSkip()} onClose={this.closeCategoryCreate} onSave={this.onCategorySave} />;\n  }\n\n  renderCategory(category, idx) {\n    let markup = '';\n    if (category == 'addButton') {\n      markup = (\n        <div className=\"category-tile dim-til-hover hover-pointer no-border\" onClick={this.openCategoryCreate}>\n          <div className=\"new\">+ Add a category</div>\n        </div>\n      );\n    } else {\n      markup = (\n        <CategoryTile\n          categoryWithExpensesAndSpend={category}\n          colorsToSkip={this.colorsToSkip()}\n          onChange={this.props.onChange}\n        />\n      );\n    }\n\n    return <div className=\"six columns\" key={idx}>{markup}</div>;\n  }\n\n  renderRow(listChunk, idx) {\n    return (\n      <div className=\"row\" key={idx}>\n        {listChunk.map((category, i) => this.renderCategory(category, i))}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderCategoryCreateModal()}\n        {this.chunkedCategories().map((listChunk, idx) => this.renderRow(listChunk, idx))}\n      </div>\n    );\n  }\n}\n\nCategoriesList.defaultProps = {\n  categoriesWithExpensesAndSpend: [],\n  is_revenue: 0\n};\n\nCategoriesList.propTypes = {\n  is_revenue: PropTypes.number,\n  categoriesWithExpensesAndSpend: PropTypes.array,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default CategoriesList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Numerics } from '../../helpers/main';\nimport CategoryFormModal from '../categories/FormModal';\n\nclass CategoryTile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showCategoryEditModal: false };\n  }\n\n  openCategoryEdit = () => { this.setState({ showCategoryEditModal: true }); }\n  closeCategoryEdit = () => { this.setState({ showCategoryEditModal: false }); }\n  onCategorySave = () => {\n    this.closeCategoryEdit();\n    this.props.onChange();\n  }\n  onExpenseSave = () => {\n    this.closeExpenseCreate();\n    this.props.onChange();\n  }\n\n  goalDiff() {\n    if (!this.props.categoryWithExpensesAndSpend.monthly_goal) { return 0; }\n    return this.props.categoryWithExpensesAndSpend.monthly_goal - this.props.categoryWithExpensesAndSpend.spend;\n  }\n\n  goalComparisonDisplay() {\n    if (!this.props.categoryWithExpensesAndSpend.monthly_goal) { return 'No goal set'; }\n\n    const diff = this.goalDiff();\n    return (diff >= 0) ? `${Numerics.centsToDollars(diff)} remaining` : `${Numerics.centsToDollars(Math.abs(diff))} over`;\n  }\n\n  normalizedPercentage() {\n    if (!this.props.categoryWithExpensesAndSpend.monthly_goal) { return 0; }\n    return Math.min(100, this.props.categoryWithExpensesAndSpend.spend / this.props.categoryWithExpensesAndSpend.monthly_goal * 100);\n  }\n\n  renderCategoryEditModal() {\n    if (!this.state.showCategoryEditModal) { return ''; }\n    return (\n      <CategoryFormModal\n        onClose={this.closeCategoryEdit}\n        onSave={this.onCategorySave}\n        category={this.props.categoryWithExpensesAndSpend}\n        colorsToSkip={this.props.colorsToSkip}\n      />\n    );\n  }\n\n  render() {\n    const category = this.props.categoryWithExpensesAndSpend;\n    return (\n      <>\n        <div\n          className=\"category-tile flex flex-space-between tint-on-hover hover-pointer\"\n          style={{ borderColor: category.color }}\n          onClick={this.openCategoryEdit}\n        >\n          <h3>{category.name}</h3>\n\n          <div className=\"text-right\">\n            <h2 className={category.spend > 0 ? '' : 'text-muted'}>{Numerics.centsToDollars(category.spend)}</h2>\n            <div className={this.goalDiff() < 0 ? 'text-warning' : 'text-muted'}>\n              {this.goalDiff() < 0 && (\n                <i className=\"fas fa-exclamation-circle mr-4\" />\n              )}\n              {this.goalComparisonDisplay()}\n            </div>\n          </div>\n        </div>\n        {this.renderCategoryEditModal()}\n      </>\n    );\n  }\n}\n\nCategoryTile.defaultProps = {\n  categoryWithExpensesAndSpend: {},\n  colorsToSkip: [],\n};\n\nCategoryTile.propTypes = {\n  categoryWithExpensesAndSpend: PropTypes.object,\n  colorsToSkip: PropTypes.array,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default CategoryTile;\n","import React from 'react';\nimport moment from 'moment';\nimport Overview from './Overview';\nimport CategoriesList from './CategoriesList';\nimport ExpenseFormModal from '../expenses/FormModal';\nimport PieChart from '../shared/PieChart';\nimport { Categories, Revenues, Expenses, Goals, Reports } from '../../api/main';\nimport { Alerts } from '../../helpers/main';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      expenseCategories: [],\n      revenueCategories: [],\n      expenses: [],\n      revenues: [],\n      sumExpenses: 0,\n      sumRevenues: 0,\n      loadedexpenses: false,\n      loadedrevenues: false,\n      monthlyGoal: 0,\n      showExpenseCreateModal: false,\n      showRevenueCreateModal: false,\n      data: [],\n      labels: [],\n      colors: [],\n    };\n  }\n\n  componentDidMount() {\n    this.reloadData();\n  }\n\n  openExpenseCreate = () => { this.setState({ showExpenseCreateModal: true }); }\n  closeExpenseCreate = () => { this.setState({ showExpenseCreateModal: false }); }\n  openRevenueCreate = () => { this.setState({ showRevenueCreateModal: true }); }\n  closeRevenueCreate = () => { this.setState({ showRevenueCreateModal: false }); }\n  onExpenseSave = () => {\n    this.closeExpenseCreate();\n    this.closeRevenueCreate();\n    this.reloadData();\n  }\n\n  reloadData = () => {\n    this.loadCategories();\n    this.loadExpensesCategories();\n    this.loadRevenuesCategories();\n    this.loadExpensesData();\n    this.loadRevenueData();\n    this.loadPieChartData(moment().format('MMMM YYYY'));\n  }\n\n  loadCategories = () => {\n    Categories.list().then(\n      (cResp) => { this.setState({ categories: cResp }); },\n      () => { Alerts.error(\"Categories didn't load correctly\"); }\n    );\n  }\n\n  loadExpensesCategories = () => {\n    Categories.listExpenses().then(\n      (cResp) => { this.setState({ expenseCategories: cResp }); },\n      () => { Alerts.error(\"Categories didn't load correctly\"); }\n    );\n  }\n\n  loadRevenuesCategories = () => {\n    Categories.listRevenues().then(\n      (cResp) => { this.setState({ revenueCategories: cResp }); },\n      () => { Alerts.error(\"Categories didn't load correctly\"); }\n    );\n  }\n\n  loadExpensesData = () => {\n    Expenses.list({ paid_after: moment().startOf('month').unix() }).then(\n      (eResp) => {\n        this.setState({ expenses: eResp });\n        Goals.list().then(\n          (gResp) => { this.setState({ loaded: true, monthlyGoal: gResp.monthly }); },\n          () => { Alerts.error(\"Goal of expenses didn't load!\"); },\n        );\n      },\n      () => { Alerts.error(\"Expenses didn't load correctly!\"); },\n    );\n  }\n\n  loadRevenueData = () => {\n    Revenues.list({ paid_after: moment().startOf('month').unix() }).then(\n      (rResp) => {\n        this.setState({ revenues: rResp});\n      },\n      () => { Alerts.error(\"Revenues didn't load correctly!\") }\n    );\n  }\n\n  categoriesWithExpensesAndSpend() {\n    const categories = [];\n    this.state.categories.forEach((category) => {\n      category.expenses = this.state.expenses.filter((expense) => expense.category_id == category.id);\n      category.spend = category.expenses.reduce((sum, exp) => sum + exp.amount, 0);\n      categories.push(category);\n    });\n    return categories;\n  }\n\n  EcategoriesWithExpensesAndSpend() {\n    const categories = [];\n    this.state.expenseCategories.forEach((category) => {\n      category.expenses = this.state.expenses.filter((expense) => expense.category_id == category.id);\n      category.spend = category.expenses.reduce((sum, exp) => sum + exp.amount, 0);\n      categories.push(category);\n    });\n    return categories;\n  }\n\n  RcategoriesWithExpensesAndSpend() {\n    const categories = [];\n    this.state.revenueCategories.forEach((category) => {\n      category.revenues = this.state.revenues.filter((expense) => expense.category_id == category.id);\n      category.spend = category.revenues.reduce((sum, exp) => sum + exp.amount, 0);\n      categories.push(category);\n    });\n    return categories;\n  }\n\n  renderExpenseCreateModal() {\n    if (!this.state.showExpenseCreateModal) { return ''; }\n    return <ExpenseFormModal categories={this.state.expenseCategories} title=\"Add an expense\" onClose={this.closeExpenseCreate} onSave={this.onExpenseSave} />;\n  }\n\n  renderRevenueCreateModal() {\n    if (!this.state.showRevenueCreateModal) { return ''; }\n    return <ExpenseFormModal AddRevenue={1} categories={this.state.revenueCategories} title=\"Add a revenue\" onClose={this.closeRevenueCreate} onSave={this.onExpenseSave} />;\n  }\n\n  loadSum = () => {\n    var indexRev = 0;\n\n    this.state.categories.forEach((category) => {\n      if (category.is_revenue == 1) {\n        category.revenues = this.state.revenues.filter((revenue) => revenue.category_id == category.id);\n        category.revenues.forEach((revenue) => {\n          indexRev += revenue.amount;\n        });\n      }\n    });\n\n    return (indexRev/100);\n  }\n\n  loadPieChartData = (month) => {\n    Reports.month({ month }).then(\n      (resp) => {\n\n        const revenue = this.loadSum();\n        \n        const data = resp.category_pourcentage.map((r) => \n          Number.parseFloat((r.spend/revenue)*100).toFixed(3)\n        )\n        const labels = resp.category_pourcentage.map((r) => r.category)\n        const colors = resp.category_pourcentage.map((r) => r.color)\n\n        this.setState({ data: data });\n        this.setState({ labels: labels });\n        this.setState({ colors: colors });\n\n        return true;\n      },\n      () => { Alerts.error(\"The data for the pie chart didn't load correctly!\") }\n    );\n  }\n\n  render() {\n    if (!this.state.loaded) { return ''; }\n\n    return (\n      <div>\n        {this.renderExpenseCreateModal()}\n        {this.renderRevenueCreateModal()}\n        <div className=\"container\">\n          <Overview categoriesWithExpensesAndSpend={this.categoriesWithExpensesAndSpend()} monthlyGoal={this.state.monthlyGoal} onChange={this.reloadData} />\n        </div>\n\n        <div className=\"container mt-100\">\n          <div className=\"chart-container-short\">\n            <PieChart labels={this.state.labels} data={this.state.data} colors={this.state.colors} />\n          </div>\n        </div>\n\n        <div className=\"bg-art-2\">\n          <div className=\"container\">\n            <button className=\"btn btn-round btn-dark pos-abs mt-neg-20 z-5\" onClick={this.openExpenseCreate}>+ add an expense</button>\n          </div>\n          <div className=\"container pv-100\">\n            <CategoriesList categoriesWithExpensesAndSpend={this.EcategoriesWithExpensesAndSpend()} onChange={this.reloadData} />\n          </div>\n        </div>\n\n        <div className=\"bg-art top-border\">\n          <div className=\"container\">\n            <button className=\"btn btn-round btn-dark pos-abs mt-neg-20 z-5\" onClick={this.openRevenueCreate}>+ add a revenue</button> {}\n          </div>\n          <div className=\"container pv-100\">\n            <CategoriesList is_revenue={1} categoriesWithExpensesAndSpend={this.RcategoriesWithExpensesAndSpend()} onChange={this.reloadData} />\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Numerics } from '../../helpers/main';\nimport Progress from '../shared/Progress';\nimport GoalFormModal from '../goals/FormModal';\nimport { Budgets } from '../../api/main';\n\nclass Overview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { showGoalModal: false, selectedBudgetName: \"\"};\n\n  }\n\n  componentDidMount(){\n    this.getSelectedBudgetName();\n  }\n\n  openGoal = () => { this.setState({ showGoalModal: true }); }\n  closeGoal = () => { this.setState({ showGoalModal: false }); }\n  onGoalSave = () => {\n    this.closeGoal();\n    this.props.onChange();\n  }\n\n  goalDiff() {\n    if (!this.props.monthlyGoal) { return 0; }\n    return this.props.monthlyGoal - this.totalSpend();\n  }\n\n  totalSpend() {\n    return this.props.categoriesWithExpensesAndSpend.reduce((sum, cat) => sum + cat.spend, 0);\n  }\n\n  percentages() {\n    const outOf = Math.max(this.props.monthlyGoal, this.totalSpend());\n    return this.props.categoriesWithExpensesAndSpend.map((category) => ({ percentage: (category.spend / outOf) * 100, color: category.color }));\n  }\n\n  goalComparisonDisplay() {\n    const diff = this.goalDiff();\n    return (diff >= 0) ? `${Numerics.centsToDollars(diff)} remaining` : `${Numerics.centsToDollars(Math.abs(diff))} over`;\n  }\n\n  renderGoalModal() {\n    if (!this.state.showGoalModal) { return ''; }\n    return <GoalFormModal onClose={this.closeGoal} onSave={this.onGoalSave} goals={{ monthly: this.props.monthlyGoal }} />;\n  }\n\n  getSelectedBudgetName = async() =>{\n    const selectedBudget = await Budgets.getSelectedBudgetName()\n    .then(\n      (resp) => {return resp;},\n      () => {return '';}\n      );\n\n    this.setState({selectedBudgetName: selectedBudget});\n  }\n\n\n  render() {\n    const today = moment();\n    const daysLeftInMonth = moment().endOf('month').diff(today, 'days');\n\n    return (\n      <div>\n        <h2>{this.state.selectedBudgetName}</h2>\n        <div className=\"mb-10\">{today.format('MMMM')} ({daysLeftInMonth} days left)</div>\n\n        <div className=\"flex row-flex flex-space-between flex-baseline mb-10\">\n          <div><h1>{Numerics.centsToDollars(this.totalSpend())}</h1></div>\n          {!this.props.monthlyGoal && (\n            <a href={null} onClick={this.openGoal} className=\"dim-til-hover\">Set a monthly goal</a>\n          )}\n          {!!this.props.monthlyGoal && (\n            <div className=\"flex flex-baseline\">\n              <div className={this.goalDiff() < 0 ? 'text-warning mr-4' : 'text-muted mr-4'}>\n                {this.goalDiff() < 0 && (\n                  <i className=\"fas fa-exclamation-circle mr-4\" />\n                )}\n                {this.goalComparisonDisplay()}\n              </div>\n              <i className=\"far fa-edit dim-til-hover hover-pointer text-muted\" onClick={this.openGoal} />\n            </div>\n          )}\n        </div>\n\n        <Progress data={this.percentages()} />\n      </div>\n    );\n  }\n}\n\nOverview.defaultProps = {\n  categoriesWithExpensesAndSpend: [],\n  monthlyGoal: 0,\n};\n\nOverview.propTypes = {\n  categoriesWithExpensesAndSpend: PropTypes.array,\n  monthlyGoal: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Overview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../shared/Modal';\nimport DatePicker from '../shared/DatePicker';\nimport CurrencyInput from '../shared/CurrencyInput';\nimport FieldErrors from '../shared/FieldErrors';\nimport { Categories, Expenses, Revenues } from '../../api/main';\nimport { Alerts } from '../../helpers/main';\n\nclass FormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    let categoryId = this.props.categoryId;\n    if (!categoryId && this.props.categories.length) { categoryId = this.props.categories[0].id; }\n\n    this.state = {\n      description: '',\n      category_id: categoryId,\n      amount: 0,\n      paidAt: new Date(),\n      errors: {},\n      submitted: false,\n    };\n  }\n\n  handleDescriptionChange = (e) => { this.setState({ description: e.target.value }); }\n  handleAmountChange = (num) => { this.setState({ amount: num }); }\n  handlePaidAtChange = (val) => { this.setState({ paidAt: val }); }\n  handleCategoryChange = (e) => { this.setState({ category_id: e.target.value }); }\n  handleErrors = (key, errs) => { this.setState({ errors: Object.assign(this.state.errors, { [key]: errs }) }); }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.setState({ submitted: true });\n    if (Object.values(this.state.errors).flat().length) { return; }\n\n    if (this.props.AddRevenue == 1){\n      Revenues.create({ description: this.state.description.trim(), category_id: this.state.category_id, amount: this.state.amount, paid_at: this.state.paidAt }).then(\n        (resp) => { this.props.onSave(resp); },\n        () => { Alerts.genericError(); },\n      );\n    } else {\n      Expenses.create({ description: this.state.description.trim(), category_id: this.state.category_id, amount: this.state.amount, paid_at: this.state.paidAt }).then(\n        (resp) => { this.props.onSave(resp); },\n        () => { Alerts.genericError(); },\n      );\n    }\n  }\n\n  renderForm() {\n    if (!this.props.categories.length) {\n      return (\n        <div className=\"text-center\">\n          <h4>Add a category before adding an expense!</h4>\n        </div>\n      );\n    }\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"input-group\">\n          <label className=\"required\">Amount</label>\n          <CurrencyInput initialValue={this.state.amount} onChange={this.handleAmountChange} allowNegative />\n          <FieldErrors\n            label=\"Amount\"\n            val={this.state.amount}\n            validations={{ required: true }}\n            show={this.state.submitted} handleErrors={this.handleErrors}\n          />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"input-group seven columns\">\n            <label className=\"required\">Category</label>\n            <select value={this.state.category_id} onChange={this.handleCategoryChange}>\n              {this.props.categories.map((c) => <option key={c.id} value={c.id}>{c.name}</option>)}\n            </select>\n          </div>\n\n          <div className=\"input-group five columns\">\n            <label className=\"required\">Date</label>\n            <DatePicker onChange={this.handlePaidAtChange} />\n            <FieldErrors\n              label=\"Date\"\n              val={this.state.paidAt}\n              validations={{ required: true }}\n              show={this.state.submitted} handleErrors={this.handleErrors}\n            />\n          </div>\n        </div>\n\n        <div className=\"input-group\">\n          <label className=\"required\">Description</label>\n          <input type=\"text\" value={this.state.description} onChange={this.handleDescriptionChange} />\n          <FieldErrors\n            label=\"Description\"\n            val={this.state.description}\n            validations={{ required: true }}\n            show={this.state.submitted} handleErrors={this.handleErrors}\n          />\n        </div>\n\n        <div className=\"form-actions\">\n          <button type=\"submit\" className=\"btn btn-dark\">Save</button>\n          <a className=\"dim-til-hover\" href=\"/expense_uploads/new\">Import a CSV instead</a>\n        </div>\n      </form>\n    );\n  }\n\n  render() {\n    return (\n      <Modal title={this.props.title} onClose={this.props.onClose}>\n        {this.renderForm()}\n      </Modal>\n    );\n  }\n}\n\nFormModal.defaultProps = {\n  categories: [],\n  categoryId: 0,\n  title: '',\n  AddRevenue: 0,\n};\n\nFormModal.propTypes = {\n  title: PropTypes.string,\n  categories: PropTypes.array,\n  categoryId: PropTypes.number,\n  AddRevenue: PropTypes.number,\n  onClose: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default FormModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../shared/Modal';\nimport CurrencyInput from '../shared/CurrencyInput';\nimport { Goals } from '../../api/main';\nimport { Alerts } from '../../helpers/main';\n\nclass FormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      goal: this.props.goals.monthly || 0,\n      errors: {},\n    };\n  }\n\n  handleGoalChange = (num) => { this.setState({ goal: num }); }\n  handleErrors = (key, errs) => { this.setState({ errors: Object.assign(this.state.errors, { [key]: errs }) }); }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (Object.values(this.state.errors).flat().length) { return; }\n\n    Goals.update({ monthly_goal: this.state.goal }).then(\n      (resp) => { this.props.onSave(resp); },\n      () => { Alerts.genericError(); },\n    );\n  }\n\n  render() {\n    return (\n      <Modal title=\"Edit Goal\" onClose={this.props.onClose}>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"row\">\n            <div className=\"input-group\">\n              <label>Total Monthly Goal</label>\n              <CurrencyInput initialValue={this.state.goal} onChange={this.handleGoalChange} />\n            </div>\n          </div>\n\n          <div className=\"form-actions\">\n            <button type=\"submit\" className=\"btn btn-dark\">Save</button>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n\nFormModal.defaultProps = {\n  goals: {\n    monthly: 0,\n  },\n};\n\nFormModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n  goals: PropTypes.object,\n};\n\nexport default FormModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst QUICK_COLORS = [\n  '#899b9c',\n  '#88b779',\n  '#0d947a',\n  '#248ed5',\n  '#9053ad',\n  '#ffda7d',\n  '#f49119',\n  '#e64637',\n  '#dd5e8e',\n  '#ba3427',\n  '#b3b3b3',\n  '#c5e276',\n  '#0ab191',\n  '#95dce8',\n  '#c67171',\n  '#8e5b4c',\n  '#e9eeef',\n  '#9ad8a9',\n  '#c7f4f9',\n  '#d9c3ea',\n  '#fffacf',\n  '#ffcea6',\n  '#f9b6b6',\n  '#c7b299',\n  '#2d4053',\n  '#141516',\n  '#603813',\n];\n\nclass ColorPicker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { initialColor: this.props.initialColor, color: this.props.initialColor, useTextField: false };\n  }\n\n  componentDidMount() {\n    if (!this.state.initialColor.length) {\n      this.setState({ color: this.colors()[0] });\n      this.props.onChange(this.colors()[0]);\n    }\n  }\n\n  handleChange = (color) => {\n    this.setState({ color });\n    this.props.onChange(color);\n  }\n\n  useTextField = () => {\n    this.setState({ useTextField: true });\n  }\n\n  colors() {\n    const availColors = [];\n    if (this.state.initialColor.length) { availColors.push(this.state.initialColor); }\n    for (const color of QUICK_COLORS) {\n      if (availColors.map((el) => el.toLowerCase()).includes(color.toLowerCase())) { continue; }\n      if (this.props.omitColors.length && this.props.omitColors.map((el) => el.toLowerCase()).includes(color.toLowerCase())) { continue; }\n      if (availColors.length >= 15) { break; }\n\n      availColors.push(color);\n    }\n\n    return availColors;\n  }\n\n  renderSwatches() {\n    return this.colors().map((color, idx) => (\n      <div\n        onClick={() => this.handleChange(color)}\n        key={idx}\n        className={`sample hover-pointer ${color.toLowerCase() == this.state.color.toLowerCase() ? 'active' : ''}`}\n        style={{ backgroundColor: color }}\n      />\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"color-picker\">\n        {!this.state.useTextField && (\n          <>\n            {this.renderSwatches()}\n            <div className=\"mr-10 mt-5\">\n              <button onClick={this.useTextField} type=\"button\" className=\"btn btn-sm btn-full\">Enter hex instead</button>\n            </div>\n          </>\n        )}\n\n        {this.state.useTextField && (\n          <input\n            type=\"text\"\n            placeholder=\"#fff\"\n            value={this.state.color}\n            onChange={e => this.handleChange(e.target.value)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nColorPicker.defaultProps = {\n  omitColors: [],\n  initialColor: '',\n};\n\nColorPicker.propTypes = {\n  initialColor: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  omitColors: PropTypes.array,\n};\n\nexport default ColorPicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\n\nclass CurrencyInput extends React.Component {\n  handleChange = (e) => {\n    if (!this.props.onChange) { return; }\n    const num = e.target.value.replace(/\\$|,/g, '');\n    const cents = parseInt(parseFloat(num).toFixed(2).replace(/\\./g, ''));\n    const normalized = isNaN(cents) ? 0 : cents;\n    this.props.onChange(normalized);\n  }\n\n  handleBlur = (e) => {\n    if (!this.props.onBlur) { return; }\n    const num = e.target.value.replace(/\\$|,/g, '');\n    const cents = parseInt(parseFloat(num).toFixed(2).replace(/\\./g, ''));\n    const normalized = isNaN(cents) ? 0 : cents;\n    this.props.onBlur(normalized);\n  }\n\n  render() {\n    const defaultMaskOptions = {\n      prefix: '$',\n      includeThousandsSeparator: true,\n      thousandsSeparatorSymbol: ',',\n      allowDecimal: true,\n      decimalSymbol: '.',\n      decimalLimit: 2,\n      integerLimit: 7,\n      allowLeadingZeroes: false,\n      allowNegative: this.props.allowNegative,\n    };\n    const currencyMask = createNumberMask(defaultMaskOptions);\n\n    return (\n      <MaskedInput\n        placeholder=\"$0.00\"\n        inputMode=\"decimal\"\n        mask={currencyMask}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        defaultValue={this.props.initialValue ? (this.props.initialValue / 100).toFixed(2) : ''}\n        className={this.props.className}\n      />\n    );\n  }\n}\n\nCurrencyInput.defaultProps = {\n  initialValue: 0,\n  allowNegative: false,\n  className: '',\n  onBlur: null,\n  onChange: null,\n};\n\nCurrencyInput.propTypes = {\n  initialValue: PropTypes.number,\n  allowNegative: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  className: PropTypes.string,\n};\n\nexport default CurrencyInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DatePicker from 'react-datepicker';\n\nclass Picker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { startDate: this.props.value };\n  }\n\n  handleChange = (val) => {\n    this.setState({ startDate: val });\n    this.props.onChange(val);\n  }\n\n  render() {\n    return (\n      <DatePicker onChange={this.handleChange} selected={this.state.startDate} className={this.props.className} />\n    );\n  }\n}\n\nPicker.defaultProps = {\n  value: new Date(),\n  className: '',\n};\n\nPicker.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport default Picker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass FieldErrors extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { errors: [] };\n  }\n\n  componentDidMount() {\n    this.buildErrorMessages();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.show != prevProps.show) { this.buildErrorMessages(); }\n    if (this.props.val != prevProps.val) { this.buildErrorMessages(); }\n    if (JSON.stringify(this.props.validations) != JSON.stringify(prevProps.validations)) { this.buildErrorMessages(); }\n  }\n\n  valRequired() {\n    const val = this.props.val;\n    if (typeof val == 'number') {\n      if (val == undefined || val == null || isNaN(parseInt(val.toString()))) { return false; }\n    } else if (!val) {\n      return false;\n    }\n\n    return true;\n  }\n\n  valGreaterThan() {\n    const val = this.props.val;\n    if (parseFloat(val.toString()) <= this.props.validations.greaterThan) { return false; }\n    return true;\n  }\n\n  buildErrorMessages() {\n    const errs = [];\n\n    if (this.props.validations.required && !this.valRequired()) { errs.push(`${this.props.label} is required`); }\n    if (this.props.validations.greaterThan != undefined && !this.valGreaterThan()) { errs.push(`${this.props.label} must be greater than ${this.props.validations.greaterThan}`); }\n\n    this.setState({ errors: errs });\n    if (this.props.handleErrors) { this.props.handleErrors(this.props.label, errs); }\n  }\n\n  renderError(e, idx) {\n    return <li key={idx}>{e}</li>;\n  }\n\n  render() {\n    if (!this.props.show || !this.state.errors.length) { return ''; }\n\n    return (\n      <ul className=\"errors\">\n        {this.state.errors.map((e, idx) => this.renderError(e, idx))}\n      </ul>\n    );\n  }\n}\n\nFieldErrors.defaultProps = {\n  val: null,\n  validations: {},\n  show: false,\n  handleErrors: null,\n  label: '',\n};\n\nFieldErrors.propTypes = {\n  val: PropTypes.any,\n  validations: PropTypes.object,\n  show: PropTypes.bool,\n  handleErrors: PropTypes.func,\n  label: PropTypes.string,\n};\n\nexport default FieldErrors;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Modal extends React.Component {\n  componentDidMount() {\n    document.body.className += ' modal-open';\n  }\n\n  componentWillUnmount() {\n    const openModals = document.querySelectorAll('.modal').length;\n    if (openModals == 1) {\n      document.body.className = document.body.className.replace('modal-open', '');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"modal-mask modal\">\n        <div className=\"modal-wrapper\">\n          <div className=\"modal-container\">\n            <div className=\"modal-header\">\n              <h3>{this.props.title}</h3>\n\n              <a className=\"close\" onClick={this.props.onClose}>\n                <i className=\"fa fa-times\" />\n              </a>\n            </div>\n\n            <div className=\"modal-body\">\n              {this.props.children}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.defaultProps = {\n  title: '',\n};\n\nModal.propTypes = {\n  title: PropTypes.string,\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\n\nconst PieChart = ({ data, labels, colors }) => {\n  const [randomId] = useState(Math.random().toString());\n  const [instance, setInstance] = useState(null);\n\n  useEffect(() => {\n    instance?.destroy();\n\n    const size = data.length;\n\n    const config = {\n      type: 'pie',\n      data: {\n        datasets: [{ data, backgroundColor: colors }],\n        labels,\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        legend: {\n          display:true,\n          position:'right'\n        },\n        tooltips: {\n          callbacks: {\n            label: t => `${labels[t.index]}: ${data[t.index]}%`,\n          },\n        },\n      },\n    }\n\n    const newInstance = new Chart(document.getElementById(randomId), config);\n\n    setInstance(newInstance);\n  }, [data, labels]);\n\n  return (\n    <div>\n      <canvas id={randomId} />\n    </div>\n  );\n};\n\nPieChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired,\n  colors: PropTypes.array.isRequired,\n};\n\nexport default PieChart;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Progress extends React.Component {\n  renderData(value, idx) {\n    if (value.percentage <= 0) { return ''; }\n\n    return (\n      <div className=\"progress\" key={idx} style={{ width: `${value.percentage}%`, backgroundColor: value.color ? value.color : '#565656' }} />\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"progress-bar\">\n        {this.props.data.map((value, idx) => this.renderData(value, idx))}\n      </div>\n    );\n  }\n}\n\nProgress.defaultProps = {\n  data: [],\n};\n\nProgress.propTypes = {\n  data: PropTypes.array,\n};\n\nexport default Progress;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DashboardMain from '../components/dashboard/Main';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(\n    <DashboardMain {...window.InitialProps} />,\n    document.getElementById('dashboard'),\n  );\n});\n"],"mappings":"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AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAnCA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AALA;AAaA;AACA;;;AAwvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAFA;AAQA;AAAA;AAAA;AAAA;AACA;AATA;AASA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAVA;AAWA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAjBA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAavCA;AACA;AAwCA;AACA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;A;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AAEA;AACA;AA6BA;;;AACA;AAAA;AACA;AAAA;AACA;AAFA;AAaA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAhBA;AAkBA;AAAA;AAAA;AACA;AACA;AAltEA;AACA;AAuEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AACA;A;;;;;;;;;;;;;;;;;;;;;;;;ACrHA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;;AA3CA;AACA;AA4CA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;A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","sourceRoot":""}