{"version":3,"file":"js/budget-6c746f5c895014c7e294.js","sources":["webpack://ontrack/./app/javascript/components/budget/AddBudgetModal.jsx","webpack://ontrack/./app/javascript/components/budget/AddUserModal.jsx","webpack://ontrack/./app/javascript/components/budget/Main.jsx","webpack://ontrack/./app/javascript/components/shared/FieldErrors.jsx","webpack://ontrack/./app/javascript/components/shared/Modal.jsx","webpack://ontrack/./app/javascript/packs/budget.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../shared/Modal';\nimport FieldErrors from '../shared/FieldErrors';\nimport { Budgets } from '../../api/main';\nimport { Alerts } from '../../helpers/main';\n\nclass FormBudgetModal extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          name: this.props.budget.name,\n          description: this.props.budget.description,\n          errors: {},\n          submitted: false,\n        };\n      }\n\n\n  handleNameChange = (e) => { this.setState({ name: e.target.value }); }\n  handleDescriptionChange = (e) => { this.setState({ description: e.target.value }); }\n  handleErrors = (key, errs) => { this.setState({ errors: Object.assign(this.state.errors, { [key]: errs }) }); }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.setState({ submitted: true });\n    if (Object.values(this.state.errors).flat().length) { return; }\n\n    let apiCall = null;\n    if (this.props.budget.id) {\n      apiCall = Budgets.update(this.props.budget.id, { description: this.state.description.trim(), name: this.state.name.trim() });\n    } else {\n      apiCall = Budgets.create({ description: this.state.description.trim(), name: this.state.name.trim() });\n    }\n\n    apiCall.then(\n      (resp) => { this.props.onSave(resp); },\n      () => { Alerts.genericError(); },\n    );\n  }\n\n  action() {\n    if (!this.props.budget.id) { return 'Create'; }\n    return 'Update';\n  }\n\n  renderForm() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"input-group\">\n          <label className=\"required\">Name</label>\n          <input type=\"text\" value={this.state.name} onChange={this.handleNameChange} />\n          <FieldErrors\n            label=\"Name\"\n            val={this.state.name}\n            validations={{ required: true }}\n            show={this.state.submitted} handleErrors={this.handleErrors}\n          />\n          <label className=\"required\">Description</label>\n          <textarea type=\"text\" value={this.state.description} onChange={this.handleDescriptionChange}></textarea>\n          <FieldErrors\n            label=\"Description\"\n            val={this.state.description}\n            validations={{ required: true }}\n            show={this.state.submitted} handleErrors={this.handleErrors}\n          />\n        </div>\n\n        <div className=\"form-actions\">\n          <button type=\"submit\" className=\"btn btn-dark\">{this.action()}</button>\n        </div>\n      </form>\n    );\n  }\n\n  render() {\n    return (\n      <Modal title={`${this.action()} Budget`} onClose={this.props.onClose}>\n        {this.renderForm()}\n      </Modal>\n    );\n  }\n}\n\nFormBudgetModal.defaultProps = {\n  budget: {\n    name: '',\n    description: '',\n  },\n};\n\nFormBudgetModal.propTypes = {\n  category: PropTypes.object,\n  onClose: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default FormBudgetModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../shared/Modal';\nimport FieldErrors from '../shared/FieldErrors';\nimport { Budgets } from '../../api/main';\nimport { Alerts } from '../../helpers/main';\n\nclass FormAddUserModal extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            email: '',\n            errors: {},\n            submitted: false,\n            budgetName: this.props.budget.name,\n        };\n      }\n\n\n  handleEmailChange = (e) => { this.setState({ email: e.target.value }); }\n  handleErrors = (key, errs) => { this.setState({ errors: Object.assign(this.state.errors, { [key]: errs }) }); }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.setState({ submitted: true });\n    if (Object.values(this.state.errors).flat().length) { return; }\n\n    let apiCall = null;\n\n    apiCall = Budgets.adduser({budgetid: this.props.budget.id, email: this.state.email});\n\n    apiCall.then(\n      (resp) => { this.props.onSave(resp); },\n      (error) => { error.status == 408 ? Alerts.genericConflict('User already added!') : error.status == 409 ? Alerts.genericConflict('User doesnt exist!') : Alerts.genericError(); },\n    );\n  }\n\n  renderForm() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"input-group\">\n          <label className=\"required\">User email</label>\n          <input type=\"text\" value={this.state.email} onChange={this.handleEmailChange} />\n          <FieldErrors\n            label=\"Email\"\n            val={this.state.email}\n            validations={{ required: true }}\n            show={this.state.submitted} handleErrors={this.handleErrors}\n          />\n        </div>\n\n        <div className=\"form-actions\">\n          <button type=\"submit\" className=\"btn btn-dark\">{\"Add user to \" + this.state.budgetName}</button>\n        </div>\n      </form>\n    );\n  }\n\n  render() {\n    return (\n      <Modal title={\"Add user to \" + this.state.budgetName} onClose={this.props.onClose}>\n        {this.renderForm()}\n      </Modal>\n    );\n  }\n}\n\nFormAddUserModal.defaultProps = {\n  budget: {\n    name: 'unknown'\n  },\n};\n\nFormAddUserModal.propTypes = {\n  category: PropTypes.object,\n  onClose: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default FormAddUserModal;\n","import React from 'react'\nimport FormBudgetModal from '../budget/AddBudgetModal';\nimport FormAddUserModal from './AddUserModal';\nimport { Budgets } from '../../api/main';\nimport { Alerts } from '../../helpers/main';\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            budgets: [\n                // {\n                //     id: 1, name: 'Perso', users: [\n                //         { id: 1, firstname: 'Laurent', lastname: 'Brochu' },\n                //     ]\n                // },\n                // {\n                //     id: 2, name: 'Famille', users: [\n                //         { id: 2, firstname: 'Laurent', lastname: 'Brochu' },\n                //         { id: 3, firstname: 'Maxime', lastname: 'Lefebvre' },\n                //         { id: 4, firstname: 'Karl', lastname: 'Mainville' },\n                //         { id: 5, firstname: 'Louis', lastname: 'Garceau' }\n                //     ]\n                // },\n                // {\n                //     id: 3, name: 'Entreprise Planto', users: [\n                //         { id: 6, firstname: 'Laurent', lastname: 'Brochu' },\n                //         { id: 7, firstname: 'Maxime', lastname: 'Aubin' },\n                //         { id: 8, firstname: 'Jean-Philippe', lastname: 'Belval' }\n                //     ]\n                // }\n            ],\n            idSelectedBudget: 0,\n            showBudgetCreate: false,\n            showBudgetUpdate: false,\n        };\n    }\n\n    componentDidMount() {\n        this.reloadData();\n    }\n\n    onBudgetCreateSave = () => {\n        this.closeBudgetCreate();\n        this.reloadData();\n    }\n\n    onBudgetUpdateSave = () => {\n        this.closeBudgetUpdate();\n        this.reloadData();\n    }\n\n    onAddUser = () => {\n        this.closeUserAdd();\n        this.reloadData();\n    }\n\n    onBudgetDelete = () => {\n        this.setState({ idSelectedBudget: 0});\n        this.reloadData();\n    }\n\n    onRemoveUser = () => {\n        this.reloadData();\n    }\n\n    openBudgetCreate = () => { this.setState({ showBudgetCreate: true }); }\n    closeBudgetCreate = () => { this.setState({ showBudgetCreate: false }); }\n    openBudgetUpdate = () => { this.setState({ showBudgetUpdate: true }); }\n    closeBudgetUpdate = () => { this.setState({ showBudgetUpdate: false }); }\n    changeSelectedBudget = async (id) => { this.setState({ idSelectedBudget: id }) }\n    openUserAdd = () => { this.setState({ showUserAdd: true});}\n    closeUserAdd = () => { this.setState({ showUserAdd: false});}\n\n    deleteBudget = async (id) => {\n        Alerts.genericDelete('budget').then((result) => {\n            if (!result.value) { return; }\n            Budgets.delete(id).then(\n              () => { this.onBudgetDelete(); },\n              () => { Alerts.genericError(); },\n            );\n          });\n    }\n\n    handleUserRemove = async (id, budgetId) => {\n        Alerts.genericRemove('user').then((result) => {\n            if(!result.value) {return;}\n            Budgets.removeuser({id: budgetId, userid: id}).then(\n                () => { this.onRemoveUser(); },\n                () => { Alerts.genericError(); }\n            );\n        });\n    }\n\n    updateBudget = async (id) => {\n        console.log(\"update\")\n    }\n\n    updateSelectedBudget = () => {\n        Budgets.updateSelectBudget({id: this.state.idSelectedBudget}).then(\n            (cResp) => { Alerts.success(\"Selected budget\");},\n            () => {Alerts.error(\"Couldnt select budget\");}\n        );\n    }\n\n    reloadData = () => {\n        this.loadBudgets();\n    }\n\n    loadBudgets = () => {\n        Budgets.list().then(\n          (cResp) => { this.setState({ budgets: cResp}); },\n          () => { Alerts.error(\"Budget didn't load correctly\"); }\n        );\n    }\n\n    renderBudgetCreateModal() {\n        if (!this.state.showBudgetCreate) { return ''; }\n        return <FormBudgetModal onClose={this.closeBudgetCreate} onSave={this.onBudgetCreateSave} />;\n    }\n\n    renderBudgetEditModal() {\n        if (!this.state.showBudgetUpdate) { return ''; }\n        return <FormBudgetModal \n        onClose={this.closeBudgetUpdate}\n        onSave={this.onBudgetUpdateSave} \n        budget={(this.state.budgets.find((budget) => budget.id == this.state.idSelectedBudget))}\n        />;\n    }\n\n    renderUserAddModal() {\n        if(!this.state.showUserAdd) {return '';}\n        return <FormAddUserModal onClose={this.closeUserAdd} onSave={this.onAddUser} budget={(this.state.budgets.find((budget) => budget.id == this.state.idSelectedBudget))}/>\n    }\n\n\n    renderBudgetUsers(user) {\n        return (\n            <tr id={user.id} key={user.id}>\n                <td className=\"input-group\">\n                    <label className=\"bg-gray-slight-contrast\">{user.firstname + \" \" + user.lastname}</label>\n                </td>\n\n                <td className=\"input-group mw-150\">\n\n                    {/*À revoir lors de l'implémentation des rôles */}\n\n                    {/* <select defaultValue={user.category_id} onChange={(e) => this.updateExpense(expense.id, { category_id: e.target.value })} className=\"bg-gray-slight-contrast\">\n                        {this.props.categories.map((c) => <option key={c.id} value={c.id}>{c.name}</option>)}\n                    </select> */}\n                    <select></select>\n                </td>\n\n                <td>\n                    <a onClick={() => this.handleUserRemove(user.id, this.state.idSelectedBudget)} className=\"dim-til-hover\"><i className=\"fa fa-times\" /></a>\n                </td>\n            </tr>\n        );\n    }\n\n    renderBudgetInfo(budget) {\n        if (this.state.idSelectedBudget === 0) { return 'Select a budget'; }\n        return (\n            <div className=\"content\">\n                <h3>\n                    {budget.name}\n                    &nbsp; <a onClick={() => this.openBudgetUpdate()} className=\"dim-til-hover\"><i className=\"fa fa-edit\" /></a>\n                </h3>\n                <p className=\"table_title\">\n                    {budget.description}\n                </p>\n                <div className=\"overflow-x bg-gray p-10\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Role</th>\n                                <th />\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {budget.users.map((user) => this.renderBudgetUsers(user))}\n                        </tbody>\n                    </table>\n                    <button onClick={() => this.openUserAdd()} className='btn btn-round btn-accept'><i className='text-light fa fa-plus'></i></button>\n                </div>\n                <br/>\n                <div>\n                    <button onClick={() => this.updateSelectedBudget()} className='btn btn-round btn-accept pos-abs mt-neg-20 z-5'>Select</button>\n                </div>\n            </div>\n        )\n    }\n\n\n    renderBudgets() {\n\n        return (\n            <div className='content-with-sidebar mt-30'>\n                <div className='sidebar'>\n                    <h3 className=''>Your budgets</h3>\n                    <ul>\n                        {this.state.budgets.map((budget) =>\n                        (<li key={budget.id}\n                            onClick={() => this.changeSelectedBudget(budget.id)}\n                            style={{ cursor: 'pointer' }}\n                            className={budget.id == this.state.idSelectedBudget ? 'input-group text-bold' : 'input-group'}\n                        >\n                            <a onClick={() => this.deleteBudget(budget.id)} className=\"dim-til-hover text-right\"><i className=\"fa fa-times\" /></a>\n                            &nbsp; {budget.name} \n                        </li>))}\n                    </ul>\n                    <br />\n                    <div>\n                        <button className='btn btn-round btn-dark pos-abs mt-neg-20 z-5' onClick={this.openBudgetCreate}>+ Add Budget</button>\n                    </div>\n                </div>\n                <div className='content'>\n                    {this.renderBudgetInfo(this.state.budgets.find((budget) => budget.id == this.state.idSelectedBudget))}\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className='container wide'>\n                {this.renderBudgetCreateModal()}\n                {this.renderBudgetEditModal()}\n                {this.renderUserAddModal()}\n                {this.renderBudgets()}\n            </div>\n        )\n    }\n}\n\nexport default Main;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass FieldErrors extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { errors: [] };\n  }\n\n  componentDidMount() {\n    this.buildErrorMessages();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.show != prevProps.show) { this.buildErrorMessages(); }\n    if (this.props.val != prevProps.val) { this.buildErrorMessages(); }\n    if (JSON.stringify(this.props.validations) != JSON.stringify(prevProps.validations)) { this.buildErrorMessages(); }\n  }\n\n  valRequired() {\n    const val = this.props.val;\n    if (typeof val == 'number') {\n      if (val == undefined || val == null || isNaN(parseInt(val.toString()))) { return false; }\n    } else if (!val) {\n      return false;\n    }\n\n    return true;\n  }\n\n  valGreaterThan() {\n    const val = this.props.val;\n    if (parseFloat(val.toString()) <= this.props.validations.greaterThan) { return false; }\n    return true;\n  }\n\n  buildErrorMessages() {\n    const errs = [];\n\n    if (this.props.validations.required && !this.valRequired()) { errs.push(`${this.props.label} is required`); }\n    if (this.props.validations.greaterThan != undefined && !this.valGreaterThan()) { errs.push(`${this.props.label} must be greater than ${this.props.validations.greaterThan}`); }\n\n    this.setState({ errors: errs });\n    if (this.props.handleErrors) { this.props.handleErrors(this.props.label, errs); }\n  }\n\n  renderError(e, idx) {\n    return <li key={idx}>{e}</li>;\n  }\n\n  render() {\n    if (!this.props.show || !this.state.errors.length) { return ''; }\n\n    return (\n      <ul className=\"errors\">\n        {this.state.errors.map((e, idx) => this.renderError(e, idx))}\n      </ul>\n    );\n  }\n}\n\nFieldErrors.defaultProps = {\n  val: null,\n  validations: {},\n  show: false,\n  handleErrors: null,\n  label: '',\n};\n\nFieldErrors.propTypes = {\n  val: PropTypes.any,\n  validations: PropTypes.object,\n  show: PropTypes.bool,\n  handleErrors: PropTypes.func,\n  label: PropTypes.string,\n};\n\nexport default FieldErrors;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Modal extends React.Component {\n  componentDidMount() {\n    document.body.className += ' modal-open';\n  }\n\n  componentWillUnmount() {\n    const openModals = document.querySelectorAll('.modal').length;\n    if (openModals == 1) {\n      document.body.className = document.body.className.replace('modal-open', '');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"modal-mask modal\">\n        <div className=\"modal-wrapper\">\n          <div className=\"modal-container\">\n            <div className=\"modal-header\">\n              <h3>{this.props.title}</h3>\n\n              <a className=\"close\" onClick={this.props.onClose}>\n                <i className=\"fa fa-times\" />\n              </a>\n            </div>\n\n            <div className=\"modal-body\">\n              {this.props.children}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.defaultProps = {\n  title: '',\n};\n\nModal.propTypes = {\n  title: PropTypes.string,\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nexport default Modal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BudgetMain from '../components/budget/Main';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(\n    <BudgetMain {...window.InitialProps} />,\n    document.getElementById('budget'),\n  );\n});\n"],"mappings":"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","sourceRoot":""}