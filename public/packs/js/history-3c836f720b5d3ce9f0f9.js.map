{"version":3,"file":"js/history-3c836f720b5d3ce9f0f9.js","sources":["webpack://ontrack/./app/javascript/components/history/Main.jsx","webpack://ontrack/./app/javascript/components/shared/CurrencyInput.jsx","webpack://ontrack/./app/javascript/components/shared/DatePicker.jsx","webpack://ontrack/./app/javascript/components/shared/Paginator.jsx","webpack://ontrack/./app/javascript/packs/history.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Paginator from '../shared/Paginator';\nimport DatePicker from '../shared/DatePicker';\nimport CurrencyInput from '../shared/CurrencyInput';\nimport { Alerts, Util } from '../../helpers/main';\nimport { Expenses, Revenues } from '../../api/main';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const defaultTimeframe = 'last_90_days';\n    const [minPaidAtExpense, maxPaidAtExpense] = this.minAndMaxForTimeframe(defaultTimeframe, 0);\n    const [minPaidAtRevenue, maxPaidAtRevenue] = this.minAndMaxForTimeframe(defaultTimeframe, 1);\n\n    this.state = {\n      expenses: [],\n      revenues: [],\n      expenseCategories :[],\n      revenueCategories :[],\n      minPaidAtExpense,\n      maxPaidAtExpense,\n      minPaidAtRevenue,\n      maxPaidAtRevenue,\n      categoryIdExpenses: this.props.categoryId || '',\n      categoryIdRevenues: this.props.categoryId || '',\n      sortRevenues: 'paid_at',\n      sortDescRevenues: true,\n      sortExpenses: 'paid_at',\n      sortDescExpenses: true,\n      reloadTrigger: 0,\n      reloadPageTrigger: 0,\n      timeframeExpense: defaultTimeframe,\n      timeframeRevenue: defaultTimeframe,\n      searchExpenses: '',\n      searchRevenues: '',\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) { \n    const revenues = props.categories.filter(cat => {\n      return cat.is_revenue === 1;});\n    const expenses = props.categories.filter(cat => {\n        return cat.is_revenue === 0;});\n    \n    return {revenueCategories: revenues, expenseCategories: expenses};\n  }\n\n  onLoadExpenses = (payload) => { this.setState({ expenses: payload.items }); }\n  onLoadRevenues = (payload) => { this.setState({ revenues: payload.items }); }\n\n  handlePaidAtMinExpenseChange = (val) => { this.setState({ minPaidAtExpense: moment(val).unix() }); }\n  handlePaidAtMaxExpenseChange = (val) => { this.setState({ maxPaidAtExpense: moment(val).unix() }); }\n\n  handlePaidAtMinRevenueChange = (val) => { this.setState({ minPaidAtRevenue: moment(val).unix() }); }\n  handlePaidAtMaxRevenueChange = (val) => { this.setState({ maxPaidAtRevenue: moment(val).unix() }); }\n  \n  handleCategoryFilterChangeExpenses = (e) => { this.setState({ categoryIdExpenses: e.target.value }); }\n  handleCategoryFilterChangeRevenues = (e) => { this.setState({ categoryIdRevenues: e.target.value }); }\n\n  toggleSortDirRevenues = () => { this.setState({ sortDescRevenues: !this.state.sortDescRevenues }); }\n  toggleSortDirExpenses = () => { this.setState({ sortDescExpenses: !this.state.sortDescExpenses }); }\n  \n  changeSortRevenues = (s) => { this.setState({ sortRevenues: s, sortDescRevenues: true }); }\n  changeSortExpenses = (s) => { this.setState({ sortExpenses: s, sortDescExpenses: true }); }\n\n  updateExpense = (id, updates) => {\n    Expenses.update(id, updates).then(\n      () => { this.setState({ reloadPageTrigger: this.state.reloadPageTrigger + 1 }); },\n      () => { Alerts.genericError(); },\n    );\n  }\n  handleExpenseDelete = (id) => {\n    Alerts.genericDelete('expense').then((result) => {\n      if (!result.value) { return; }\n      Expenses.delete(id).then(\n        () => { this.setState({ reloadTrigger: this.state.reloadTrigger + 1 }); },\n        () => { Alerts.genericError(); },\n      );\n    });\n  }\n\n  updateRevenue = (id, updates) => {\n    Revenues.update(id, updates).then(\n      () => { this.setState({ reloadPageTrigger: this.state.reloadPageTrigger + 1 }); },\n      () => { Alerts.genericError(); },\n    );\n  }\n  handleRevenueDelete = (id) => {\n    Alerts.genericDelete('revenue').then((result) => {\n      if (!result.value) { return; }\n      Revenues.delete(id).then(\n        () => { this.setState({ reloadTrigger: this.state.reloadTrigger + 1 }); },\n        () => { Alerts.genericError(); },\n      );\n    });\n  }\n\n  handleTimeframeChangeExpense = (e) => {\n    const timeframeExpense = e.target.value;\n    const [minPaidAtExpense, maxPaidAtExpense] = this.minAndMaxForTimeframe(timeframeExpense, 0);\n\n    this.setState({ timeframeExpense, minPaidAtExpense, maxPaidAtExpense });\n  }\n  handleTimeframeChangeRevenue = (e) => {\n    const timeframeRevenue = e.target.value;\n    const [minPaidAtRevenue, maxPaidAtRevenue] = this.minAndMaxForTimeframe(timeframeRevenue, 0);\n\n    this.setState({ timeframeRevenue, minPaidAtRevenue, maxPaidAtRevenue });\n  }\n\n  handleSearchChangeExpenses = Util.debounce((search) => {\n    this.setState({ searchExpenses: search });\n  }, 500);\n\n  handleSearchChangeRevenues = Util.debounce((search) => {\n    this.setState({ searchRevenues: search });\n  }, 500);\n\n  minAndMaxForTimeframe = (timeframe, is_revenue) => {\n    switch (timeframe) {\n    case 'current_month':\n      return [moment().startOf('month').unix(), moment().unix()];\n    case 'last_90_days':\n      return [moment().subtract(90, 'days').unix(), moment().unix()];\n    case 'ytd':\n      return [moment().startOf('year').unix(), moment().unix()];\n    case 'custom':\n      if (is_revenue == 0) {\n        return [this.state.minPaidAtExpense, this.state.maxPaidAtExpense];\n      } else {\n        return [this.state.minPaidAtExpense, this.state.maxPaidAtRevenue];\n      }\n    }\n  };\n\n  urlExpenses() {\n    return `/expenses?include_category=true&paid_before=${this.state.maxPaidAtExpense}&paid_after=${this.state.minPaidAtExpense}&category_id=${this.state.categoryIdExpenses}&sort=${this.state.sortExpenses}&sort_desc=${this.state.sortDescExpenses}&search=${this.state.searchExpenses}`;\n  }\n\n  // ToDo: Fix url : error raised in paginator loaddata\n  // sort is raising error\n  urlRevenues() {\n    return `/revenues?include_category=true&paid_before=${this.state.maxPaidAtRevenue}&paid_after=${this.state.minPaidAtRevenue}&category_id=${this.state.categoryIdRevenues}&sort=${this.state.sortRevenues}&sort_desc=${this.state.sortDescRevenues}&search=${this.state.searchRevenues}`; \n  }\n\n  renderSortRevenues(key) {\n    if (this.state.sortRevenues == key) {\n      return <i onClick={this.toggleSortDirRevenues} className={`fas fa-sort-${this.state.sortDescRevenues ? 'down' : 'up'} ml-2 hover-pointer`} />;\n    } else {\n      return <i onClick={() => { this.changeSortRevenues(key); }} className=\"fas fa-sort ml-2 hover-pointer\" />;\n    }\n  }\n\n  renderSortExpenses(key) {\n    if (this.state.sortExpenses == key) {\n      return <i onClick={this.toggleSortDirExpenses} className={`fas fa-sort-${this.state.sortDescExpenses ? 'down' : 'up'} ml-2 hover-pointer`} />;\n    } else {\n      return <i onClick={() => { this.changeSortExpenses(key); }} className=\"fas fa-sort ml-2 hover-pointer\" />;\n    }\n  }\n\n  renderEmptyState() {\n    if (this.props.hasData) { return ''; }\n    return (\n      <div className=\"empty-or-error-status\">\n        <div className=\"status-text\">\n          <h2>Our historian has nothing to do!</h2>\n          <div>The expenses you enter will show up here.</div>\n        </div>\n        <img className=\"status-image\" src={window.historian} />\n      </div>\n    );\n  }\n\n  renderExpensesTable() {\n    if (!this.props.hasData) { return ''; }\n    return (\n      <div className=\"content-with-sidebar mt-30\">\n        <div className=\"sidebar input-group\">\n          <select onChange={this.handleCategoryFilterChangeExpenses} defaultValue={this.state.categoryIdExpenses}>\n            <option value=\"\">All categories</option>\n            {this.state.expenseCategories.map((c) => <option key={c.id} value={c.id}>{c.name}</option>)}\n          </select>\n\n          <select className=\"mt-10\" onChange={this.handleTimeframeChangeExpense} defaultValue={this.state.timeframeExpense}>\n            <option value='current_month'>Current month</option>\n            <option value='last_90_days'>Last 90 days</option>\n            <option value='ytd'>Year to date</option>\n            <option value='custom'>Custom timeframe</option>\n          </select>\n\n          {this.state.timeframeExpense === 'custom' && (\n            <div className=\"mt-10\">\n              <DatePicker onChange={this.handlePaidAtMinExpenseChange} value={moment.unix(this.state.minPaidAtExpense).toDate()} />\n              <div className=\"text-center\">to</div>\n              <DatePicker onChange={this.handlePaidAtMaxExpenseChange} value={moment.unix(this.state.maxPaidAtExpense).toDate()} />\n            </div>\n          )}\n\n          <input className=\"mt-10\" placeholder=\"Search for description\" onChange={e => this.handleSearchChangeExpenses(e.target.value)} />\n        </div>\n\n        <div className=\"content\">\n          <div className=\"overflow-x bg-art-2 p-10\">\n            <table className=\"table\">\n            <caption>Expenses</caption>\n              <thead>\n                <tr>\n                  <th>Date {this.renderSortExpenses('paid_at')}</th>\n                  <th>Category</th>\n                  <th>Amount {this.renderSortExpenses('amount')}</th>\n                  <th>Description</th>\n                  <th />\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.expenses.map((exp) => this.renderExpense(exp))}\n              </tbody>\n            </table>\n          </div>\n\n          <div className=\"mt-20\">\n            <Paginator\n              // url = loaddata directly from controller\n              url={this.urlExpenses()}\n              onLoad={this.onLoadExpenses}\n              reloadTrigger={this.state.reloadTrigger}\n              reloadPageTrigger={this.state.reloadPageTrigger}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderRevenuesTable() {\n    if (!this.props.hasData) { return ''; }\n    return (\n      <div className=\"content-with-sidebar mt-30\">\n        <div className=\"sidebar input-group\">\n          <select onChange={this.handleCategoryFilterChangeRevenues} defaultValue={this.state.categoryIdRevenues}>\n            <option value=\"\">All categories</option>\n            {this.state.revenueCategories.map((c) => <option key={c.id} value={c.id}>{c.name}</option>)}\n          </select>\n\n          <select className=\"mt-10\" onChange={this.handleTimeframeChangeRevenue} defaultValue={this.state.timeframeRevenue}>\n            <option value='current_month'>Current month</option>\n            <option value='last_90_days'>Last 90 days</option>\n            <option value='ytd'>Year to date</option>\n            <option value='custom'>Custom timeframe</option>\n          </select>\n\n          {this.state.timeframeRevenue === 'custom' && (\n            <div className=\"mt-10\">\n              <DatePicker onChange={this.handlePaidAtMinRevenueChange} value={moment.unix(this.state.minPaidAtExpense).toDate()} />\n              <div className=\"text-center\">to</div>\n              <DatePicker onChange={this.handlePaidAtMaxRevenueChange} value={moment.unix(this.state.maxPaidAtExpense).toDate()} />\n            </div>\n          )}\n\n          <input className=\"mt-10\" placeholder=\"Search for description\" onChange={e => this.handleSearchChangeRevenues(e.target.value)} />\n        </div>\n\n        <div className=\"content\">\n          <div className=\"overflow-x bg-art p-10\">\n            <table className=\"table\">\n            <caption>Revenues</caption>\n              <thead>\n                <tr>\n                  <th>Date {this.renderSortRevenues('paid_at')}</th>\n                  <th>Category</th>\n                  <th>Amount {this.renderSortRevenues('amount')}</th>\n                  <th>Description</th>\n                  <th />\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.revenues.map((exp) => this.renderRevenue(exp))}\n              </tbody>\n            </table>\n          </div>\n\n          <div className=\"mt-20\">\n            <Paginator\n              // url = loaddata directly from controller\n              // ToDo : Change for urlRevenues and onLoadRevenues\n              url={this.urlRevenues()}\n              onLoad={this.onLoadRevenues}\n              reloadTrigger={this.state.reloadTrigger}\n              reloadPageTrigger={this.state.reloadPageTrigger}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderExpense(expense) {\n    return (\n      <tr key={expense.id}>\n        <td className=\"input-group mw-120\">\n          <DatePicker onChange={(val) => this.updateExpense(expense.id, { paid_at: val })} value={new Date(expense.paid_at)} className=\"bg-gray-slight-contrast\" />\n        </td>\n\n        <td className=\"input-group mw-150\">\n          <select defaultValue={expense.category_id} onChange={(e) => this.updateExpense(expense.id, { category_id: e.target.value })} className=\"bg-gray-slight-contrast\">\n            {this.state.expenseCategories.map((c) => <option key={c.id} value={c.id}>{c.name}</option>)}\n          </select>\n        </td>\n\n        <td className=\"input-group mw-100\">\n          <CurrencyInput\n            initialValue={expense.amount}\n            onBlur={(val) => this.updateExpense(expense.id, { amount: val })}\n            className=\"bg-gray-slight-contrast\"\n            allowNegative\n          />\n        </td>\n\n        <td className=\"input-group\">\n          <input defaultValue={expense.description} onBlur={(e) => { if (e.target.value.trim() != expense.description) { this.updateExpense(expense.id, { description: e.target.value.trim() }); } } } className=\"bg-gray-slight-contrast\" />\n        </td>\n\n        <td>\n          <a onClick={() => this.handleExpenseDelete(expense.id)} className=\"dim-til-hover\"><i className=\"fa fa-times\" /></a>\n        </td>\n      </tr>\n    );\n  }\n\n  renderRevenue(revenue) {\n    return (\n      <tr key={revenue.id}>\n        <td className=\"input-group mw-120\">\n          <DatePicker onChange={(val) => this.updateRevenue(revenue.id, { paid_at: val })} value={new Date(revenue.paid_at)} className=\"bg-gray-slight-contrast\" />\n        </td>\n\n        <td className=\"input-group mw-150\">\n          <select defaultValue={revenue.category_id} onChange={(e) => this.updateRevenue(revenue.id, { category_id: e.target.value })} className=\"bg-gray-slight-contrast\">\n            {this.state.revenueCategories.map((c) => <option key={c.id} value={c.id}>{c.name}</option>)}\n          </select>\n        </td>\n\n        <td className=\"input-group mw-100\">\n          <CurrencyInput\n            initialValue={revenue.amount}\n            onBlur={(val) => this.updateRevenue(revenue.id, { amount: val })}\n            className=\"bg-gray-slight-contrast\"\n            allowNegative\n          />\n        </td>\n\n        <td className=\"input-group\">\n          <input defaultValue={revenue.description} onBlur={(e) => { if (e.target.value.trim() != revenue.description) { this.updateRevenue(expense.id, { description: e.target.value.trim() }); } } } className=\"bg-gray-slight-contrast\" />\n        </td>\n\n        <td>\n          <a onClick={() => this.handleRevenueDelete(revenue.id)} className=\"dim-til-hover\"><i className=\"fa fa-times\" /></a>\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container wide\">\n        {this.renderEmptyState()}\n        {this.renderExpensesTable()}\n        {this.renderRevenuesTable()}\n      </div>\n    );\n  }\n}\n\nMain.defaultProps = {\n  hasData: false,\n  categories: [],\n  categoryId: null,\n  paidAfter: null,\n};\n\nMain.propTypes = {\n  hasData: PropTypes.bool,\n  categories: PropTypes.array,\n  categoryId: PropTypes.any,\n  paidAfter: PropTypes.any,\n};\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\n\nclass CurrencyInput extends React.Component {\n  handleChange = (e) => {\n    if (!this.props.onChange) { return; }\n    const num = e.target.value.replace(/\\$|,/g, '');\n    const cents = parseInt(parseFloat(num).toFixed(2).replace(/\\./g, ''));\n    const normalized = isNaN(cents) ? 0 : cents;\n    this.props.onChange(normalized);\n  }\n\n  handleBlur = (e) => {\n    if (!this.props.onBlur) { return; }\n    const num = e.target.value.replace(/\\$|,/g, '');\n    const cents = parseInt(parseFloat(num).toFixed(2).replace(/\\./g, ''));\n    const normalized = isNaN(cents) ? 0 : cents;\n    this.props.onBlur(normalized);\n  }\n\n  render() {\n    const defaultMaskOptions = {\n      prefix: '$',\n      includeThousandsSeparator: true,\n      thousandsSeparatorSymbol: ',',\n      allowDecimal: true,\n      decimalSymbol: '.',\n      decimalLimit: 2,\n      integerLimit: 7,\n      allowLeadingZeroes: false,\n      allowNegative: this.props.allowNegative,\n    };\n    const currencyMask = createNumberMask(defaultMaskOptions);\n\n    return (\n      <MaskedInput\n        placeholder=\"$0.00\"\n        inputMode=\"decimal\"\n        mask={currencyMask}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        defaultValue={this.props.initialValue ? (this.props.initialValue / 100).toFixed(2) : ''}\n        className={this.props.className}\n      />\n    );\n  }\n}\n\nCurrencyInput.defaultProps = {\n  initialValue: 0,\n  allowNegative: false,\n  className: '',\n  onBlur: null,\n  onChange: null,\n};\n\nCurrencyInput.propTypes = {\n  initialValue: PropTypes.number,\n  allowNegative: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  className: PropTypes.string,\n};\n\nexport default CurrencyInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DatePicker from 'react-datepicker';\n\nclass Picker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { startDate: this.props.value };\n  }\n\n  handleChange = (val) => {\n    this.setState({ startDate: val });\n    this.props.onChange(val);\n  }\n\n  render() {\n    return (\n      <DatePicker onChange={this.handleChange} selected={this.state.startDate} className={this.props.className} />\n    );\n  }\n}\n\nPicker.defaultProps = {\n  value: new Date(),\n  className: '',\n};\n\nPicker.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport default Picker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Base } from '../../api/main';\nimport { Alerts } from '../../helpers/main';\n\nclass Paginator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedPage: 1,\n      itemsPerPage: this.props.itemsPerPage,\n      totalItems: 0,\n      totalPages: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.url !== this.props.url) {\n      this.setState({ selectedPage: 1 }, this.loadData);\n    }\n\n    if (prevProps.reloadTrigger !== this.props.reloadTrigger) {\n      this.setState({ selectedPage: 1 }, this.loadData);\n    }\n\n    if (prevProps.reloadPageTrigger !== this.props.reloadPageTrigger) {\n      this.loadData();\n    }\n  }\n\n  handlePageNext = () => {\n    if (this.state.selectedPage + 1 > this.state.totalPages) { return; }\n    this.setState({ selectedPage: this.state.selectedPage + 1 }, this.loadData);\n  }\n\n  handlePagePrev = () => {\n    if (this.state.selectedPage - 1 < 1) { return; }\n    this.setState({ selectedPage: this.state.selectedPage - 1 }, this.loadData);\n  }\n\n  handleSelect = (p) => {\n    this.setState({ selectedPage: p }, this.loadData);\n  }\n\n  loadData() {\n    // Raises error if revenue\n    if (!this.props.url.length) { return; }\n    Base.get(this.props.url, { page: this.state.selectedPage, per_page: this.state.itemsPerPage }).then(\n      (resp) => {\n        this.setState({ totalItems: resp.total, totalPages: resp.total_pages, selectedPage: resp.page, itemsPerPage: resp.per_page });\n        this.props.onLoad(resp);\n      },\n      () => { Alerts.genericError(); },\n    );\n  }\n\n  firstPage() {\n    return this.state.selectedPage === 1;\n  }\n\n  lastPage() {\n    return this.state.selectedPage === this.state.totalPages;\n  }\n\n  itemsLowerLimit() {\n    if (this.state.selectedPage === 1) {\n      return 1;\n    }\n\n    return ((this.state.selectedPage - 1) * this.state.itemsPerPage) + 1;\n  }\n\n  itemsUpperLimit() {\n    const upperLimit = this.state.selectedPage * this.state.itemsPerPage;\n    if (this.state.totalItems < upperLimit) {\n      return this.state.totalItems;\n    }\n    return upperLimit;\n  }\n\n  displayedPages() {\n    const pages = [];\n    let lowerBound = 0;\n    let upperBound = 0;\n\n    if (this.state.totalPages <= 10) {\n      lowerBound = 1;\n      upperBound = this.state.totalPages;\n    } else {\n      // Make sure if we're on the last page, and there are enough previous pages, we still show 10 pages total up to the last page\n      const nextSlidingLowerBound = this.state.selectedPage >= this.state.totalPages - 4 ? this.state.totalPages - 9 : this.state.selectedPage - 5;\n      lowerBound = this.state.selectedPage >= 10 ? nextSlidingLowerBound : 1;\n\n      // Make sure the next upper bound isn't outside of the range of pages available\n      const nextSlidingUpperBound = this.state.selectedPage + 4 > this.state.totalPages ? this.state.totalPages : this.state.selectedPage + 4;\n      upperBound = this.state.selectedPage >= 10 ? nextSlidingUpperBound : 10;\n    }\n\n    for (let p = lowerBound; p <= upperBound; p++) { pages.push(p); }\n    return pages;\n  }\n\n  renderPage(p) {\n    return (\n      <li className={`hover-pointer ${this.state.selectedPage == p ? 'active' : ''}`} v-for=\"p in displayedPages\" key={`page-${p}`}>\n        <a onClick={() => this.handleSelect(p)}>{p}</a>\n      </li>\n    );\n  }\n\n  render() {\n    if (this.state.totalItems < 1) { return ''; }\n\n    return (\n      <div className=\"paginator\">\n        <div className=\"pagination-num-items\">\n          <span>Showing <strong>{this.itemsLowerLimit()}</strong>-<strong>{this.itemsUpperLimit()}</strong> of <strong>{this.state.totalItems}</strong></span>\n        </div>\n\n        <ol>\n          <li>\n            <a onClick={this.handlePagePrev}><i className=\"fa fa-angle-left\" /></a>\n          </li>\n          {this.displayedPages().map((p) => this.renderPage(p))}\n          <li>\n            <a onClick={this.handlePageNext}><i className=\"fa fa-angle-right\" /></a>\n          </li>\n        </ol>\n      </div>\n    );\n  }\n}\n\nPaginator.defaultProps = {\n  itemsPerPage: 5,\n  url: '',\n  reloadTrigger: 0,\n  reloadPageTrigger: 0,\n};\n\nPaginator.propTypes = {\n  itemsPerPage: PropTypes.number,\n  url: PropTypes.string,\n  reloadTrigger: PropTypes.number,\n  reloadPageTrigger: PropTypes.number,\n  onLoad: PropTypes.func.isRequired,\n};\n\nexport default Paginator;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport HistoryMain from '../components/history/Main';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(\n    <HistoryMain {...window.InitialProps} />,\n    document.getElementById('history'),\n  );\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAFA;AAwCA;AAAA;AAAA;AAAA;AACA;AAzCA;AAyCA;AAAA;AAAA;AAAA;AACA;AA1CA;AA2CA;AAAA;AAAA;AAAA;AACA;AA5CA;AA4CA;AAAA;AAAA;AAAA;AACA;AA7CA;AA8CA;AAAA;AAAA;AAAA;AACA;AA/CA;AA+CA;AAAA;AAAA;AAAA;AACA;AAhDA;AAiDA;AAAA;AAAA;AAAA;AACA;AAlDA;AAkDA;AAAA;AAAA;AAAA;AACA;AAnDA;AAoDA;AAAA;AAAA;AAAA;AACA;AArDA;AAqDA;AAAA;AAAA;AAAA;AACA;AAtDA;AAuDA;AAAA;AAAA;AAAA;AAAA;AACA;AAxDA;AAwDA;AAAA;AAAA;AAAA;AAAA;AACA;AAzDA;AA2DA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAhEA;AAiEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAzEA;AA2EA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAhFA;AAiFA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAzFA;AA2FA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAhGA;AAiGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAtGA;AAwGA;AAAA;AAAA;AACA;AAzGA;AA4GA;AAAA;AAAA;AACA;AACA;AA9GA;AAgHA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAcA;AACA;AA5HA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAPA;AA6BA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;AAyxYA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;;AA3CA;AACA;AA4CA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;A;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAFA;AAGA;AACA;;;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAhBA;AACA;AAiBA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AACA;A;;;;;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAFA;AA6BA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAhCA;AAkCA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AArCA;AAuCA;AAAA;AAAA;AACA;AACA;AAvCA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAelIA;AACA;AAmIA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;A;;;;;;;;;;;;;;;;;ACzJA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;A;;;;;;;;;;A","sourceRoot":""}