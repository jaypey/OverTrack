{"version":3,"file":"js/create_config-6d656c75a09f74182223.js","sources":["webpack://ontrack/./app/javascript/components/expenses/CreateConfig.jsx","webpack://ontrack/./app/javascript/components/expenses/GenericList.jsx","webpack://ontrack/./app/javascript/components/expenses/GenericListItem.jsx","webpack://ontrack/./app/javascript/components/shared/FieldErrors.jsx","webpack://ontrack/./app/javascript/packs/create_config.jsx"],"sourcesContent":["import React from 'react';\r\nimport FieldErrors from '../shared/FieldErrors';\r\nimport GenericList from './GenericList';\r\nimport { useRef } from 'react';\r\n\r\n\r\n\r\nclass CreateConfig extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      descriptionIdx: 0,\r\n      categoryIdx: 0,\r\n      amountIdx: 0,\r\n      dateIdx: 0,\r\n      ignoredSubstring: [\"1\", \"2\", \"3\", \"Payement made\", \"Other stuff:\", \"asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdf\"],\r\n      currentSubstring: \"\",\r\n    };\r\n\r\n  }\r\n\r\n  handleRemoveSubstring = (substringToDelete) => { \r\n\r\n    var stringToDelete = substringToDelete.trim();\r\n    console.log(stringToDelete);\r\n    console.log(this.state);\r\n\r\n    if (stringToDelete != \"\")\r\n      this.setState(({ ignoredSubstring: this.state.ignoredSubstring.filter(e => e !== stringToDelete) }));\r\n  }\r\n\r\n  handleAddSubstring = () => {\r\n\r\n    var currentString = this.state.currentSubstring.trim();\r\n\r\n    if (currentString != \"\") {\r\n      this.setState(prevState =>\r\n      ({\r\n        ignoredSubstring: [...prevState.ignoredSubstring\r\n          .filter(e => e !== currentString), ...currentString].sort()\r\n      }));\r\n      this.setState({ currentSubstring: \"\" });\r\n    }\r\n\r\n  }\r\n\r\n  handleDescriptionIdxChange = (e) => { this.setState({ descriptionIdx: e.target.value }); }\r\n  handleCategoryIdxChange = (e) => { this.setState({ categoryIdx: e.target.value }); }\r\n  handleAmountIdxChange = (e) => { this.setState({ amountIdx: e.target.value }); }\r\n  handleDateIdxChange = (e) => { this.setState({ dateIdx: e.target.value }); }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <form id=\"config-form\" onSubmit={this.handleSubmit}>\r\n\r\n        <div className=\"config-description-container config-group\">\r\n          <h3>Description</h3>\r\n          <div className=\"input-group config-idx\">\r\n            <label className=\"required\">Index</label>\r\n            <input className=\"config-input config-idx-input\" type=\"number\" min=\"0\"\r\n              value={this.state.descriptionIdx}\r\n              onChange={this.handleDescriptionIdxChange} />\r\n          </div>\r\n          <label>Ignored text</label>\r\n          <div className='config-list-input-container'>\r\n            <div className='config-list-input'>\r\n              <div className='input-and-button'>\r\n                <input className='config-input config-list-textbox' onChange={(e) =>\r\n                  this.setState({ currentSubstring: e.target.value })} value={this.state.currentSubstring} type=\"text\" />\r\n                <span onClick={this.handleAddSubstring} className=\"config-add-substring fa fa-plus\"></span>\r\n              </div>\r\n            </div>\r\n            <div className='config-list'>\r\n              {this.state.ignoredSubstring.length > 0 && <GenericList handleDelete={this.handleRemoveSubstring} list={this.state.ignoredSubstring} />}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"config-category-container config-group\">\r\n          <div className=\"input-group config-idx\">\r\n            <label className=\"required\">Index</label>\r\n            <input className=\"config-input config-idx-input\" type=\"number\" min=\"0\"\r\n              value={this.state.categoryIdx}\r\n              onChange={this.handleCategoryIdxChange} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='config-amount-container config-group'>\r\n          <div className=\"input-group config-idx\">\r\n            <label className=\"required\">Index</label>\r\n            <input className=\"config-input config-idx-input\" type=\"number\" min=\"0\"\r\n              value={this.state.amountIdx}\r\n              onChange={this.handleAmountIdxChange} />\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className='config-date-container config-group'>\r\n          <div className=\"input-group config-idx\">\r\n            <label className=\"required\">Date index</label>\r\n            <input className=\"config-input config-idx-input\" type=\"number\" min=\"0\"\r\n              value={this.state.dateIdx}\r\n              onChange={this.handleDateIdxChange} />\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateConfig;\r\n","import React from 'react';\nimport GenericListItem from './GenericListItem';\n\n\nconst GenericList = ({handleDelete, list}) => {\n    return (\n        <>\n            {list.map((item, index) => {\n               \n                return (\n                    <GenericListItem key={index} handleDelete={handleDelete} text={item} />\n                )\n            })}\n        </>\n    );\n}\n\nexport default GenericList;","import React from 'react';\n\nconst GenericListItem = ({handleDelete, text}) =>{\n    return (\n        <div className='generic-item-container'>\n            <span className='generic-item-text'>{text}</span>\n            <span onClick={() => handleDelete(text)} className='fa fa-times generic-item-delete'></span>\n        </div>\n    );\n}\n\nexport default GenericListItem;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass FieldErrors extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { errors: [] };\n  }\n\n  componentDidMount() {\n    this.buildErrorMessages();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.show != prevProps.show) { this.buildErrorMessages(); }\n    if (this.props.val != prevProps.val) { this.buildErrorMessages(); }\n    if (JSON.stringify(this.props.validations) != JSON.stringify(prevProps.validations)) { this.buildErrorMessages(); }\n  }\n\n  valRequired() {\n    const val = this.props.val;\n    if (typeof val == 'number') {\n      if (val == undefined || val == null || isNaN(parseInt(val.toString()))) { return false; }\n    } else if (!val) {\n      return false;\n    }\n\n    return true;\n  }\n\n  valGreaterThan() {\n    const val = this.props.val;\n    if (parseFloat(val.toString()) <= this.props.validations.greaterThan) { return false; }\n    return true;\n  }\n\n  buildErrorMessages() {\n    const errs = [];\n\n    if (this.props.validations.required && !this.valRequired()) { errs.push(`${this.props.label} is required`); }\n    if (this.props.validations.greaterThan != undefined && !this.valGreaterThan()) { errs.push(`${this.props.label} must be greater than ${this.props.validations.greaterThan}`); }\n\n    this.setState({ errors: errs });\n    if (this.props.handleErrors) { this.props.handleErrors(this.props.label, errs); }\n  }\n\n  renderError(e, idx) {\n    return <li key={idx}>{e}</li>;\n  }\n\n  render() {\n    if (!this.props.show || !this.state.errors.length) { return ''; }\n\n    return (\n      <ul className=\"errors\">\n        {this.state.errors.map((e, idx) => this.renderError(e, idx))}\n      </ul>\n    );\n  }\n}\n\nFieldErrors.defaultProps = {\n  val: null,\n  validations: {},\n  show: false,\n  handleErrors: null,\n  label: '',\n};\n\nFieldErrors.propTypes = {\n  val: PropTypes.any,\n  validations: PropTypes.object,\n  show: PropTypes.bool,\n  handleErrors: PropTypes.func,\n  label: PropTypes.string,\n};\n\nexport default FieldErrors;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CreateConfig from '../components/expenses/CreateConfig';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(\n    <CreateConfig/>,\n    document.getElementById('create_config'),\n  );\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;;;AACA;AAAA;AACA;AAAA;AACA;AAFA;AAgBA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAvBA;AA0BA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAFA;AADA;AACA;AAIA;AAAA;AAAA;AACA;AAEA;AACA;AAtCA;AAuCA;AAAA;AAAA;AAAA;AACA;AAxCA;AAwCA;AAAA;AAAA;AAAA;AACA;AAzCA;AAyCA;AAAA;AAAA;AAAA;AACA;AA1CA;AA0CA;AAAA;AAAA;AAAA;AACA;AA3CA;AA6CA;AACA;AACA;AA5CA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AAYA;AACA;;;AAmvHA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;A;;;;;;;;;;;;;;;AClBA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;A;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;;AAxDA;AACA;AAyDA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;A;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;A;;;;;;;;;;A","sourceRoot":""}