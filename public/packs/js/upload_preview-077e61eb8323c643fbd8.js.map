{"version":3,"file":"js/upload_preview-077e61eb8323c643fbd8.js","sources":["webpack://ontrack/./app/javascript/components/expenses/UploadPreview.jsx","webpack://ontrack/./app/javascript/components/shared/CurrencyInput.jsx","webpack://ontrack/./app/javascript/components/shared/DatePicker.jsx","webpack://ontrack/./app/javascript/packs/upload_preview.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport DatePicker from '../shared/DatePicker';\nimport CurrencyInput from '../shared/CurrencyInput';\nimport { Expenses } from '../../api/main';\nimport { Alerts } from '../../helpers/main';\n\nclass UploadPreview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expenses: props.expenses,\n      submitting: false,\n    };\n  }\n\n  handleExpenseDelete = (idx) => {\n    const modifiedExpenses = [...this.state.expenses]; // Make a copy\n    modifiedExpenses.splice(idx, 1);\n    this.setState({ expenses: modifiedExpenses });\n  }\n\n  updateExpense = (idx, updates) => {\n    const modifiedExpenses = [...this.state.expenses]; // Make a copy\n    const modifiedExpense = Object.assign({ ...modifiedExpenses[idx] }, updates);\n    modifiedExpenses[idx] = modifiedExpense;\n    this.setState({ expenses: modifiedExpenses });\n  }\n\n  renderEmptyState() {\n    if (this.props.expenses.length) { return ''; }\n    return (\n      <div className=\"empty-or-error-status mt-30\">\n        <div className=\"status-text\">\n          <h2>Nothing to import!</h2>\n          <div>There are no expenses to import from your CSV.</div>\n          <div className=\"mt-10\">\n            <a href=\"/expense_uploads/new\" className=\"btn btn-dark\">Go back</a>\n          </div>\n        </div>\n        <img className=\"status-image\" src={window.historian} />\n      </div>\n    );\n  }\n\n  cancel() {\n    window.location = '/expense_uploads/new';\n  }\n\n  submit = () => {\n    this.setState({ submitting: true });\n\n    Expenses.bulkCreate({ expenses: this.state.expenses }).then(\n      () => {\n        this.setState({ submitting: false });\n        Alerts.success('Your import was successful.', () => { window.location = '/expenses'; });\n      },\n      () => {\n        this.setState({ submitting: false });\n        Alerts.error('Something went wrong! Double check that your inputs are all valid.');\n      },\n    );\n  }\n\n  renderExpense(expense, idx) {\n    return (\n      <tr key={`${expense.paid_at}-${expense.amount}-${expense.description}-${idx}`}>\n        <td className=\"input-group mw-150\">\n          <DatePicker onChange={(val) => this.updateExpense(idx, { paid_at: val })} value={new Date(expense.paid_at)} className=\"bg-gray-slight-contrast\" />\n        </td>\n\n        <td className=\"input-group mw-200\">\n          <select defaultValue={expense.category_id} onChange={(e) => this.updateExpense(idx, { category_id: e.target.value })} className=\"bg-gray-slight-contrast\">\n            {this.props.categories.map((c) => <option key={c.id} value={c.id}>{c.name}</option>)}\n          </select>\n        </td>\n\n        <td className=\"input-group mw-100\">\n          <CurrencyInput\n            initialValue={expense.amount}\n            onBlur={(val) => this.updateExpense(idx, { amount: val })}\n            allowNegative\n            className=\"bg-gray-slight-contrast\"\n          />\n        </td>\n\n        <td className=\"input-group mw-300\">\n          <input defaultValue={expense.description} onBlur={(e) => { if (e.target.value.trim() != expense.description) { this.updateExpense(idx, { description: e.target.value.trim() }); } } } className=\"bg-gray-slight-contrast\" />\n        </td>\n\n        <td>\n          <a onClick={() => this.handleExpenseDelete(idx)} className=\"dim-til-hover\"><i className=\"fa fa-times\" /></a>\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container pb-100\">\n        {this.renderEmptyState()}\n\n        {this.props.expenses.length > 0 && (\n          <>\n            <h1>Review import ({this.state.expenses.length} items)</h1>\n            <div>\n              <div className=\"mt-30 mb-10\">\n                <em className=\"text-muted\">Make any changes you want before submitting at the bottom of the page.</em>\n              </div>\n              <div className=\"overflow-x bg-gray p-10\">\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th>Date</th>\n                      <th>Category</th>\n                      <th>Amount</th>\n                      <th>Description</th>\n                      <th />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.expenses.map((exp, idx) => this.renderExpense(exp, idx))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            <div className=\"form-actions\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-dark\"\n                onClick={this.submit}\n                disabled={this.state.submitting}\n              >\n                {this.state.submitting ? 'Submitting...' : 'Submit'}\n              </button>\n              <button type=\"button\" className=\"btn\" onClick={this.cancel}>Cancel</button>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nUploadPreview.defaultProps = {\n  categories: [],\n  expenses: [],\n};\n\nUploadPreview.propTypes = {\n  categories: PropTypes.array,\n  expenses: PropTypes.array,\n};\n\nexport default UploadPreview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\n\nclass CurrencyInput extends React.Component {\n  handleChange = (e) => {\n    if (!this.props.onChange) { return; }\n    const num = e.target.value.replace(/\\$|,/g, '');\n    const cents = parseInt(parseFloat(num).toFixed(2).replace(/\\./g, ''));\n    const normalized = isNaN(cents) ? 0 : cents;\n    this.props.onChange(normalized);\n  }\n\n  handleBlur = (e) => {\n    if (!this.props.onBlur) { return; }\n    const num = e.target.value.replace(/\\$|,/g, '');\n    const cents = parseInt(parseFloat(num).toFixed(2).replace(/\\./g, ''));\n    const normalized = isNaN(cents) ? 0 : cents;\n    this.props.onBlur(normalized);\n  }\n\n  render() {\n    const defaultMaskOptions = {\n      prefix: '$',\n      includeThousandsSeparator: true,\n      thousandsSeparatorSymbol: ',',\n      allowDecimal: true,\n      decimalSymbol: '.',\n      decimalLimit: 2,\n      integerLimit: 7,\n      allowLeadingZeroes: false,\n      allowNegative: this.props.allowNegative,\n    };\n    const currencyMask = createNumberMask(defaultMaskOptions);\n\n    return (\n      <MaskedInput\n        placeholder=\"$0.00\"\n        inputMode=\"decimal\"\n        mask={currencyMask}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        defaultValue={this.props.initialValue ? (this.props.initialValue / 100).toFixed(2) : ''}\n        className={this.props.className}\n      />\n    );\n  }\n}\n\nCurrencyInput.defaultProps = {\n  initialValue: 0,\n  allowNegative: false,\n  className: '',\n  onBlur: null,\n  onChange: null,\n};\n\nCurrencyInput.propTypes = {\n  initialValue: PropTypes.number,\n  allowNegative: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  className: PropTypes.string,\n};\n\nexport default CurrencyInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DatePicker from 'react-datepicker';\n\nclass Picker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { startDate: this.props.value };\n  }\n\n  handleChange = (val) => {\n    this.setState({ startDate: val });\n    this.props.onChange(val);\n  }\n\n  render() {\n    return (\n      <DatePicker onChange={this.handleChange} selected={this.state.startDate} className={this.props.className} />\n    );\n  }\n}\n\nPicker.defaultProps = {\n  value: new Date(),\n  className: '',\n};\n\nPicker.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport default Picker;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport UploadPreview from '../components/expenses/UploadPreview';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(\n    <UploadPreview {...window.InitialProps} />,\n    document.getElementById('upload_preview'),\n  );\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAFA;AASA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAbA;AAeA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AApBA;AA0CA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AArDA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAcA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAgxIA;AACA;AAyIA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAKA;AACA;A;;;;;;;;;;;;;;;;;;;;;;;;AC5JA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;;AA3CA;AACA;AA4CA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;A;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAFA;AAGA;AACA;;;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAhBA;AACA;AAiBA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AACA;A;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;A;;;;;;;;;;A","sourceRoot":""}