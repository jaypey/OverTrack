{"version":3,"file":"js/history-c83f2320aa7dd0d08a97.js","sources":["webpack://ontrack/./app/javascript/components/history/Main.jsx","webpack://ontrack/./app/javascript/components/shared/CurrencyInput.jsx","webpack://ontrack/./app/javascript/components/shared/DatePicker.jsx","webpack://ontrack/./app/javascript/components/shared/Paginator.jsx","webpack://ontrack/./app/javascript/packs/history.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport Paginator from '../shared/Paginator';\r\nimport DatePicker from '../shared/DatePicker';\r\nimport CurrencyInput from '../shared/CurrencyInput';\r\nimport { Alerts, Util } from '../../helpers/main';\r\nimport { Expenses, Revenues } from '../../api/main';\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const defaultTimeframe = 'last_90_days';\r\n    const [minPaidAt, maxPaidAt] = this.minAndMaxForTimeframe(defaultTimeframe);\r\n\r\n    this.state = {\r\n      expenses: [],\r\n      revenues: [],\r\n      minPaidAt,\r\n      maxPaidAt,\r\n      categoryId: this.props.categoryId || '',\r\n      sort: 'paid_at',\r\n      sortDesc: true,\r\n      reloadTrigger: 0,\r\n      reloadPageTrigger: 0,\r\n      timeframe: defaultTimeframe,\r\n      search: '',\r\n    };\r\n  }\r\n\r\n  onLoad = (payload) => { this.setState({ expenses: payload.items }); }\r\n  handlePaidAtMinChange = (val) => { this.setState({ minPaidAt: moment(val).unix() }); }\r\n  handlePaidAtMaxChange = (val) => { this.setState({ maxPaidAt: moment(val).unix() }); }\r\n  handleCategoryFilterChange = (e) => { this.setState({ categoryId: e.target.value }); }\r\n  toggleSortDir = () => { this.setState({ sortDesc: !this.state.sortDesc }); }\r\n  changeSort = (s) => { this.setState({ sort: s, sortDesc: true }); }\r\n  updateExpense = (id, updates) => {\r\n    Expenses.update(id, updates).then(\r\n      () => { this.setState({ reloadPageTrigger: this.state.reloadPageTrigger + 1 }); },\r\n      () => { Alerts.genericError(); },\r\n    );\r\n  }\r\n  handleExpenseDelete = (id) => {\r\n    Alerts.genericDelete('expense').then((result) => {\r\n      if (!result.value) { return; }\r\n      Expenses.delete(id).then(\r\n        () => { this.setState({ reloadTrigger: this.state.reloadTrigger + 1 }); },\r\n        () => { Alerts.genericError(); },\r\n      );\r\n    });\r\n  }\r\n  handleTimeframeChange = (e) => {\r\n    const timeframe = e.target.value;\r\n    const [minPaidAt, maxPaidAt] = this.minAndMaxForTimeframe(timeframe);\r\n\r\n    this.setState({ timeframe, minPaidAt, maxPaidAt });\r\n  }\r\n  handleSearchChange = Util.debounce((search) => {\r\n    this.setState({ search });\r\n  }, 500);\r\n  minAndMaxForTimeframe = (timeframe) => {\r\n    switch (timeframe) {\r\n    case 'current_month':\r\n      return [moment().startOf('month').unix(), moment().unix()];\r\n    case 'last_90_days':\r\n      return [moment().subtract(90, 'days').unix(), moment().unix()];\r\n    case 'ytd':\r\n      return [moment().startOf('year').unix(), moment().unix()];\r\n    case 'custom':\r\n      return [this.state.minPaidAt, this.state.maxPaidAt];\r\n    }\r\n  };\r\n\r\n  url() {\r\n    return `/expenses?include_category=true&paid_before=${this.state.maxPaidAt}&paid_after=${this.state.minPaidAt}&category_id=${this.state.categoryId}&sort=${this.state.sort}&sort_desc=${this.state.sortDesc}&search=${this.state.search}`;\r\n  }\r\n\r\n  renderSort(key) {\r\n    if (this.state.sort == key) {\r\n      return <i onClick={this.toggleSortDir} className={`fas fa-sort-${this.state.sortDesc ? 'down' : 'up'} ml-2 hover-pointer`} />;\r\n    } else {\r\n      return <i onClick={() => { this.changeSort(key); }} className=\"fas fa-sort ml-2 hover-pointer\" />;\r\n    }\r\n  }\r\n\r\n  renderEmptyState() {\r\n    if (this.props.hasData) { return ''; }\r\n    return (\r\n      <div className=\"empty-or-error-status\">\r\n        <div className=\"status-text\">\r\n          <h2>Our historian has nothing to do!</h2>\r\n          <div>The expenses you enter will show up here.</div>\r\n        </div>\r\n        <img className=\"status-image\" src={window.historian} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderTable() {\r\n    if (!this.props.hasData) { return ''; }\r\n    return (\r\n      <div className=\"content-with-sidebar mt-30\">\r\n        <div className=\"sidebar input-group\">\r\n          <select onChange={this.handleCategoryFilterChange} defaultValue={this.state.categoryId}>\r\n            <option value=\"\">All categories</option>\r\n            {this.props.categories.map((c) => <option key={c.id} value={c.id}>{c.name}</option>)}\r\n          </select>\r\n\r\n          <select className=\"mt-10\" onChange={this.handleTimeframeChange} defaultValue={this.state.timeframe}>\r\n            <option value='current_month'>Current month</option>\r\n            <option value='last_90_days'>Last 90 days</option>\r\n            <option value='ytd'>Year to date</option>\r\n            <option value='custom'>Custom timeframe</option>\r\n          </select>\r\n\r\n          {this.state.timeframe === 'custom' && (\r\n            <div className=\"mt-10\">\r\n              <DatePicker onChange={this.handlePaidAtMinChange} value={moment.unix(this.state.minPaidAt).toDate()} />\r\n              <div className=\"text-center\">to</div>\r\n              <DatePicker onChange={this.handlePaidAtMaxChange} value={moment.unix(this.state.maxPaidAt).toDate()} />\r\n            </div>\r\n          )}\r\n\r\n          <input className=\"mt-10\" placeholder=\"Search for description\" onChange={e => this.handleSearchChange(e.target.value)} />\r\n        </div>\r\n\r\n        <div className=\"content\">\r\n          <div className=\"overflow-x bg-gray p-10\">\r\n            <table className=\"table\">\r\n            <caption>Expenses</caption>\r\n              <thead>\r\n                <tr>\r\n                  <th>Date {this.renderSort('paid_at')}</th>\r\n                  <th>Category</th>\r\n                  <th>Amount {this.renderSort('amount')}</th>\r\n                  <th>Description</th>\r\n                  <th />\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.expenses.map((exp) => this.renderExpense(exp))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className=\"mt-20\">\r\n            <Paginator\r\n              url={this.url()}\r\n              onLoad={this.onLoad}\r\n              reloadTrigger={this.state.reloadTrigger}\r\n              reloadPageTrigger={this.state.reloadPageTrigger}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderExpense(expense) {\r\n    return (\r\n      <tr key={expense.id}>\r\n        <td className=\"input-group mw-120\">\r\n          <DatePicker onChange={(val) => this.updateExpense(expense.id, { paid_at: val })} value={new Date(expense.paid_at)} className=\"bg-gray-slight-contrast\" />\r\n        </td>\r\n\r\n        <td className=\"input-group mw-150\">\r\n          <select defaultValue={expense.category_id} onChange={(e) => this.updateExpense(expense.id, { category_id: e.target.value })} className=\"bg-gray-slight-contrast\">\r\n            {this.props.categories.map((c) => <option key={c.id} value={c.id}>{c.name}</option>)}\r\n          </select>\r\n        </td>\r\n\r\n        <td className=\"input-group mw-100\">\r\n          <CurrencyInput\r\n            initialValue={expense.amount}\r\n            onBlur={(val) => this.updateExpense(expense.id, { amount: val })}\r\n            className=\"bg-gray-slight-contrast\"\r\n            allowNegative\r\n          />\r\n        </td>\r\n\r\n        <td className=\"input-group\">\r\n          <input defaultValue={expense.description} onBlur={(e) => { if (e.target.value.trim() != expense.description) { this.updateExpense(expense.id, { description: e.target.value.trim() }); } } } className=\"bg-gray-slight-contrast\" />\r\n        </td>\r\n\r\n        <td>\r\n          <a onClick={() => this.handleExpenseDelete(expense.id)} className=\"dim-til-hover\"><i className=\"fa fa-times\" /></a>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container wide\">\r\n        {this.renderEmptyState()}\r\n        {this.renderTable()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMain.defaultProps = {\r\n  hasData: false,\r\n  categories: [],\r\n  categoryId: null,\r\n  paidAfter: null,\r\n};\r\n\r\nMain.propTypes = {\r\n  hasData: PropTypes.bool,\r\n  categories: PropTypes.array,\r\n  categoryId: PropTypes.any,\r\n  paidAfter: PropTypes.any,\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MaskedInput from 'react-text-mask';\r\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\r\n\r\nclass CurrencyInput extends React.Component {\r\n  handleChange = (e) => {\r\n    if (!this.props.onChange) { return; }\r\n    const num = e.target.value.replace(/\\$|,/g, '');\r\n    const cents = parseInt(parseFloat(num).toFixed(2).replace(/\\./g, ''));\r\n    const normalized = isNaN(cents) ? 0 : cents;\r\n    this.props.onChange(normalized);\r\n  }\r\n\r\n  handleBlur = (e) => {\r\n    if (!this.props.onBlur) { return; }\r\n    const num = e.target.value.replace(/\\$|,/g, '');\r\n    const cents = parseInt(parseFloat(num).toFixed(2).replace(/\\./g, ''));\r\n    const normalized = isNaN(cents) ? 0 : cents;\r\n    this.props.onBlur(normalized);\r\n  }\r\n\r\n  render() {\r\n    const defaultMaskOptions = {\r\n      prefix: '$',\r\n      includeThousandsSeparator: true,\r\n      thousandsSeparatorSymbol: ',',\r\n      allowDecimal: true,\r\n      decimalSymbol: '.',\r\n      decimalLimit: 2,\r\n      integerLimit: 7,\r\n      allowLeadingZeroes: false,\r\n      allowNegative: this.props.allowNegative,\r\n    };\r\n    const currencyMask = createNumberMask(defaultMaskOptions);\r\n\r\n    return (\r\n      <MaskedInput\r\n        placeholder=\"$0.00\"\r\n        inputMode=\"decimal\"\r\n        mask={currencyMask}\r\n        onBlur={this.handleBlur}\r\n        onChange={this.handleChange}\r\n        defaultValue={this.props.initialValue ? (this.props.initialValue / 100).toFixed(2) : ''}\r\n        className={this.props.className}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCurrencyInput.defaultProps = {\r\n  initialValue: 0,\r\n  allowNegative: false,\r\n  className: '',\r\n  onBlur: null,\r\n  onChange: null,\r\n};\r\n\r\nCurrencyInput.propTypes = {\r\n  initialValue: PropTypes.number,\r\n  allowNegative: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  onBlur: PropTypes.func,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default CurrencyInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nclass Picker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { startDate: this.props.value };\r\n  }\r\n\r\n  handleChange = (val) => {\r\n    this.setState({ startDate: val });\r\n    this.props.onChange(val);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <DatePicker onChange={this.handleChange} selected={this.state.startDate} className={this.props.className} />\r\n    );\r\n  }\r\n}\r\n\r\nPicker.defaultProps = {\r\n  value: new Date(),\r\n  className: '',\r\n};\r\n\r\nPicker.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.object,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Picker;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Base } from '../../api/main';\r\nimport { Alerts } from '../../helpers/main';\r\n\r\nclass Paginator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedPage: 1,\r\n      itemsPerPage: this.props.itemsPerPage,\r\n      totalItems: 0,\r\n      totalPages: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.url !== this.props.url) {\r\n      this.setState({ selectedPage: 1 }, this.loadData);\r\n    }\r\n\r\n    if (prevProps.reloadTrigger !== this.props.reloadTrigger) {\r\n      this.setState({ selectedPage: 1 }, this.loadData);\r\n    }\r\n\r\n    if (prevProps.reloadPageTrigger !== this.props.reloadPageTrigger) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  handlePageNext = () => {\r\n    if (this.state.selectedPage + 1 > this.state.totalPages) { return; }\r\n    this.setState({ selectedPage: this.state.selectedPage + 1 }, this.loadData);\r\n  }\r\n\r\n  handlePagePrev = () => {\r\n    if (this.state.selectedPage - 1 < 1) { return; }\r\n    this.setState({ selectedPage: this.state.selectedPage - 1 }, this.loadData);\r\n  }\r\n\r\n  handleSelect = (p) => {\r\n    this.setState({ selectedPage: p }, this.loadData);\r\n  }\r\n\r\n  loadData() {\r\n    if (!this.props.url.length) { return; }\r\n    Base.get(this.props.url, { page: this.state.selectedPage, per_page: this.state.itemsPerPage }).then(\r\n      (resp) => {\r\n        this.setState({ totalItems: resp.total, totalPages: resp.total_pages, selectedPage: resp.page, itemsPerPage: resp.per_page });\r\n        this.props.onLoad(resp);\r\n      },\r\n      () => { Alerts.genericError(); },\r\n    );\r\n  }\r\n\r\n  firstPage() {\r\n    return this.state.selectedPage === 1;\r\n  }\r\n\r\n  lastPage() {\r\n    return this.state.selectedPage === this.state.totalPages;\r\n  }\r\n\r\n  itemsLowerLimit() {\r\n    if (this.state.selectedPage === 1) {\r\n      return 1;\r\n    }\r\n\r\n    return ((this.state.selectedPage - 1) * this.state.itemsPerPage) + 1;\r\n  }\r\n\r\n  itemsUpperLimit() {\r\n    const upperLimit = this.state.selectedPage * this.state.itemsPerPage;\r\n    if (this.state.totalItems < upperLimit) {\r\n      return this.state.totalItems;\r\n    }\r\n    return upperLimit;\r\n  }\r\n\r\n  displayedPages() {\r\n    const pages = [];\r\n    let lowerBound = 0;\r\n    let upperBound = 0;\r\n\r\n    if (this.state.totalPages <= 10) {\r\n      lowerBound = 1;\r\n      upperBound = this.state.totalPages;\r\n    } else {\r\n      // Make sure if we're on the last page, and there are enough previous pages, we still show 10 pages total up to the last page\r\n      const nextSlidingLowerBound = this.state.selectedPage >= this.state.totalPages - 4 ? this.state.totalPages - 9 : this.state.selectedPage - 5;\r\n      lowerBound = this.state.selectedPage >= 10 ? nextSlidingLowerBound : 1;\r\n\r\n      // Make sure the next upper bound isn't outside of the range of pages available\r\n      const nextSlidingUpperBound = this.state.selectedPage + 4 > this.state.totalPages ? this.state.totalPages : this.state.selectedPage + 4;\r\n      upperBound = this.state.selectedPage >= 10 ? nextSlidingUpperBound : 10;\r\n    }\r\n\r\n    for (let p = lowerBound; p <= upperBound; p++) { pages.push(p); }\r\n    return pages;\r\n  }\r\n\r\n  renderPage(p) {\r\n    return (\r\n      <li className={`hover-pointer ${this.state.selectedPage == p ? 'active' : ''}`} v-for=\"p in displayedPages\" key={`page-${p}`}>\r\n        <a onClick={() => this.handleSelect(p)}>{p}</a>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.totalItems < 1) { return ''; }\r\n\r\n    return (\r\n      <div className=\"paginator\">\r\n        <div className=\"pagination-num-items\">\r\n          <span>Showing <strong>{this.itemsLowerLimit()}</strong>-<strong>{this.itemsUpperLimit()}</strong> of <strong>{this.state.totalItems}</strong></span>\r\n        </div>\r\n\r\n        <ol>\r\n          <li>\r\n            <a onClick={this.handlePagePrev}><i className=\"fa fa-angle-left\" /></a>\r\n          </li>\r\n          {this.displayedPages().map((p) => this.renderPage(p))}\r\n          <li>\r\n            <a onClick={this.handlePageNext}><i className=\"fa fa-angle-right\" /></a>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPaginator.defaultProps = {\r\n  itemsPerPage: 10,\r\n  url: '',\r\n  reloadTrigger: 0,\r\n  reloadPageTrigger: 0,\r\n};\r\n\r\nPaginator.propTypes = {\r\n  itemsPerPage: PropTypes.number,\r\n  url: PropTypes.string,\r\n  reloadTrigger: PropTypes.number,\r\n  reloadPageTrigger: PropTypes.number,\r\n  onLoad: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport HistoryMain from '../components/history/Main';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  ReactDOM.render(\r\n    <HistoryMain {...window.InitialProps} />,\r\n    document.getElementById('history'),\r\n  );\r\n});\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAFA;AAqBA;AAAA;AAAA;AAAA;AACA;AAtBA;AAsBA;AAAA;AAAA;AAAA;AACA;AAvBA;AAuBA;AAAA;AAAA;AAAA;AACA;AAxBA;AAwBA;AAAA;AAAA;AAAA;AACA;AAzBA;AAyBA;AAAA;AAAA;AAAA;AACA;AA1BA;AA0BA;AAAA;AAAA;AAAA;AAAA;AACA;AA3BA;AA4BA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAjCA;AAkCA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AA1CA;AA2CA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAhDA;AAiDA;AAAA;AAAA;AACA;AACA;AAnDA;AAoDA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AARA;AAUA;AACA;AA5DA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AANA;AAmgMA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;A;;;;;;;;;;;;;;;;;;;;;;;;ACzNA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;;AA3CA;AACA;AA4CA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;A;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAFA;AAGA;AACA;;;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;AAhBA;AACA;AAiBA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AACA;A;;;;;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAFA;AA6BA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAhCA;AAkCA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AArCA;AAuCA;AAAA;AAAA;AACA;AACA;AAvCA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAejIA;AACA;AAkIA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;A;;;;;;;;;;;;;;;;;ACxJA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;A;;;;;;;;;;A","sourceRoot":""}